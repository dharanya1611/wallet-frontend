{"remainingRequest":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\src\\pages\\Dashboard\\Tables\\PaginatedTables.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\src\\pages\\Dashboard\\Tables\\PaginatedTables.vue","mtime":1549356819448},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Pagination } from \"@/components\";\nimport users from \"./users\";\nimport Fuse from \"fuse.js\";\nimport swal from \"sweetalert2\";\nimport axios from 'axios'; // const params = require('../_helpers/params.js');\n// const CONFIG = params.params; \n\nexport default {\n  components: {\n    Pagination: Pagination\n  },\n  created: function created() {\n    var token = window.localStorage.getItem('token');\n    var user = JSON.parse(localStorage.getItem('user'));\n    var app = this;\n    axios.get(\"http://localhost:3201/api/user\", {\n      headers: {\n        'x-access-token': token\n      }\n    }).then(function (res) {\n      app.add = res.data.data.address;\n      app.userArray();\n    });\n  },\n  computed: {\n    /***\n     * Returns a page from the searched data or the whole data. Search is performed in the watch section below\n     */\n    queriedData: function queriedData() {\n      var result = this.tableData;\n\n      if (this.searchedData.length > 0) {\n        result = this.searchedData;\n      }\n\n      return result.slice(this.from, this.to);\n    },\n    to: function to() {\n      var highBound = this.from + this.pagination.perPage;\n\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n\n      return highBound;\n    },\n    from: function from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total: function total() {\n      return this.searchedData.length > 0 ? this.searchedData.length : this.tableData.length;\n    }\n  },\n  data: function data() {\n    return {\n      currentSort: \"name\",\n      currentSortOrder: \"asc\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      footerTable: [\"Name\", \"Date\", \"Received\", \"Sent\", \"Actions\"],\n      searchQuery: \"\",\n      propsToSearch: [\"name\"],\n      tableData: [],\n      transactName: [],\n      searchedData: [],\n      fuseSearch: null\n    };\n  },\n  methods: {\n    userArray: function userArray() {\n      var self = this;\n      var token = window.localStorage.getItem('token');\n      var user = JSON.parse(localStorage.getItem('user'));\n      axios.get(\"http://localhost:3201/api/userData\", {\n        headers: {\n          'x-access-token': token\n        }\n      }).then(function (res) {\n        console.log(res);\n        self.transactName = res.data.data;\n        axios.get(\"http://localhost:3201/api/recentTrans\", {\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (res) {\n          console.log('TRANS', res);\n          self.tableData = res.data.data;\n        });\n      });\n    },\n    customSort: function customSort(value) {\n      var _this = this;\n\n      return value.sort(function (a, b) {\n        var sortBy = _this.currentSort;\n\n        if (_this.currentSortOrder === \"desc\") {\n          return a[sortBy].localeCompare(b[sortBy]);\n        }\n\n        return b[sortBy].localeCompare(a[sortBy]);\n      });\n    },\n    handleLike: function handleLike(item) {\n      swal({\n        title: \"You liked \".concat(item.name),\n        buttonsStyling: false,\n        type: \"success\",\n        confirmButtonClass: \"md-button md-success\"\n      });\n    },\n    handleEdit: function handleEdit(item) {\n      swal({\n        title: \"You want to edit \".concat(item.name),\n        buttonsStyling: false,\n        confirmButtonClass: \"md-button md-info\"\n      });\n    },\n    handleDelete: function handleDelete(item) {\n      var _this2 = this;\n\n      swal({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonClass: \"md-button md-success btn-fill\",\n        cancelButtonClass: \"md-button md-danger btn-fill\",\n        confirmButtonText: \"Yes, delete it!\",\n        buttonsStyling: false\n      }).then(function (result) {\n        if (result.value) {\n          _this2.deleteRow(item);\n\n          swal({\n            title: \"Deleted!\",\n            text: \"You deleted \".concat(item.name),\n            type: \"success\",\n            confirmButtonClass: \"md-button md-success btn-fill\",\n            buttonsStyling: false\n          });\n        }\n      });\n    },\n    deleteRow: function deleteRow(item) {\n      var indexToDelete = this.tableData.findIndex(function (tableRow) {\n        return tableRow.id === item.id;\n      });\n\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    }\n  },\n  mounted: function mounted() {\n    // Fuse search initialization.\n    this.fuseSearch = new Fuse(this.tableData, {\n      keys: [\"name\", \"email\"],\n      threshold: 0.3\n    });\n  },\n  watch: {\n    /**\n     * Searches through the table data by a given query.\n     * NOTE: If you have a lot of data, it's recommended to do the search on the Server Side and only display the results here.\n     * @param value of the query\n     */\n    searchQuery: function searchQuery(value) {\n      var result = this.tableData;\n\n      if (value !== \"\") {\n        result = this.fuseSearch.search(this.searchQuery);\n      }\n\n      this.searchedData = result;\n    }\n  }\n};",{"version":3,"sources":["PaginatedTables.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"md-layout\">\n    <div class=\"md-layout-item\">\n      <md-card>\n        <md-card-header class=\"md-card-header-icon md-card-header-green\">\n          <div class=\"card-icon\">\n            <md-icon>assignment</md-icon>\n          </div>\n          <h4 class=\"title\">Paginated Tables</h4>\n        </md-card-header>\n        <md-card-content>\n          <md-table\n            :value=\"queriedData\"\n            :md-sort.sync=\"currentSort\"\n            :md-sort-order.sync=\"currentSortOrder\"\n            :md-sort-fn=\"customSort\"\n            class=\"paginated-table table-striped table-hover\"\n          >\n            <md-table-toolbar>\n              <md-field>\n                <label for=\"pages\">Per page</label>\n                <md-select v-model=\"pagination.perPage\" name=\"pages\">\n                  <md-option\n                    v-for=\"item in pagination.perPageOptions\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\"\n                  >\n                    {{ item }}\n                  </md-option>\n                </md-select>\n              </md-field>\n\n              <md-field>\n                <md-input\n                  type=\"search\"\n                  class=\"mb-3\"\n                  clearable\n                  style=\"width: 200px\"\n                  placeholder=\"Search records\"\n                  v-model=\"searchQuery\"\n                >\n                </md-input>\n              </md-field>\n            </md-table-toolbar>\n\n            <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n              <md-table-cell md-label=\"Name\" md-sort-by=\"name\">\n                {{ item.getName }}\n              </md-table-cell>\n              <md-table-cell md-label=\"Date\" md-sort-by=\"email\">{{\n                (item.timestamp * 1)  | moment('YYYY-MM-DD')\n              }}</md-table-cell>\n              <md-table-cell md-label=\"Received\">{{ item.value }}</md-table-cell>\n              <md-table-cell md-label=\"Sent\">{{ item.value }}</md-table-cell>\n              <md-table-cell md-label=\"Actions\">\n                <md-button\n                  class=\"md-just-icon md-info md-simple\"\n                  @click.native=\"handleLike(item)\"\n                >\n                  <md-icon>favorite</md-icon>\n                </md-button>\n                <md-button\n                  class=\"md-just-icon md-warning md-simple\"\n                  @click.native=\"handleEdit(item)\"\n                >\n                  <md-icon>dvr</md-icon>\n                </md-button>\n                <md-button\n                  class=\"md-just-icon md-danger md-simple\"\n                  @click.native=\"handleDelete(item)\"\n                >\n                  <md-icon>close</md-icon>\n                </md-button>\n              </md-table-cell>\n            </md-table-row>\n          </md-table>\n          <div class=\"footer-table md-table\">\n            <table>\n              <tfoot>\n                <tr>\n                  <th\n                    v-for=\"item in footerTable\"\n                    :key=\"item.name\"\n                    class=\"md-table-head\"\n                  >\n                    <div class=\"md-table-head-container md-ripple md-disabled\">\n                      <div class=\"md-table-head-label\">\n                        {{ item }}\n                      </div>\n                    </div>\n                  </th>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n        </md-card-content>\n        <md-card-actions md-alignment=\"space-between\">\n          <div class=\"\">\n            <p class=\"card-category\">\n              Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\n            </p>\n          </div>\n          <pagination\n            class=\"pagination-no-border pagination-success\"\n            v-model=\"pagination.currentPage\"\n            :per-page=\"pagination.perPage\"\n            :total=\"total\"\n          >\n          </pagination>\n        </md-card-actions>\n      </md-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Pagination } from \"@/components\";\nimport users from \"./users\";\nimport Fuse from \"fuse.js\";\nimport swal from \"sweetalert2\";\nimport axios from 'axios';\n// const params = require('../_helpers/params.js');\n// const CONFIG = params.params; \n\nexport default {\n  components: {\n    Pagination\n  },\n  created () {\n            const token = window.localStorage.getItem('token');        \n            let user = JSON.parse(localStorage.getItem('user'));\n            var app=this;\n                axios.get(\"http://localhost:3201/api/user\",{headers:{'x-access-token': token}})\n                    .then(res => {\n                        app.add = res.data.data.address\n                        app.userArray();\n            })\n       },\n  computed: {\n    /***\n     * Returns a page from the searched data or the whole data. Search is performed in the watch section below\n     */\n    queriedData() {\n      let result = this.tableData;\n      if (this.searchedData.length > 0) {\n        result = this.searchedData;\n      }\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      return this.searchedData.length > 0\n        ? this.searchedData.length\n        : this.tableData.length;\n    }\n  },\n  data() {\n    return {\n      currentSort: \"name\",\n      currentSortOrder: \"asc\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      footerTable: [\"Name\", \"Date\", \"Received\", \"Sent\", \"Actions\"],\n      searchQuery: \"\",\n      propsToSearch: [\"name\"],\n      tableData: [],\n       transactName:[],\n      searchedData: [],\n      fuseSearch: null\n    };\n  },\n  methods: {\n    userArray () {\n            let self = this\n            const token = window.localStorage.getItem('token');\n            let user = JSON.parse(localStorage.getItem('user'));\n\n            axios.get(\"http://localhost:3201/api/userData\",{headers:{'x-access-token': token}})\n                .then(res => {\n                     console.log(res)\n                     self.transactName = res.data.data                    \n                     axios.get(\"http://localhost:3201/api/recentTrans\",{headers:{'x-access-token': token}})\n                        .then(res => {\n                            console.log('TRANS',res)\n                            self.tableData = res.data.data\n                         })\n            })\n        },\n    customSort(value) {\n      return value.sort((a, b) => {\n        const sortBy = this.currentSort;\n        if (this.currentSortOrder === \"desc\") {\n          return a[sortBy].localeCompare(b[sortBy]);\n        }\n        return b[sortBy].localeCompare(a[sortBy]);\n      });\n    },\n    handleLike(item) {\n      swal({\n        title: `You liked ${item.name}`,\n        buttonsStyling: false,\n        type: \"success\",\n        confirmButtonClass: \"md-button md-success\"\n      });\n    },\n    handleEdit(item) {\n      swal({\n        title: `You want to edit ${item.name}`,\n        buttonsStyling: false,\n        confirmButtonClass: \"md-button md-info\"\n      });\n    },\n    handleDelete(item) {\n      swal({\n        title: \"Are you sure?\",\n        text: `You won't be able to revert this!`,\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonClass: \"md-button md-success btn-fill\",\n        cancelButtonClass: \"md-button md-danger btn-fill\",\n        confirmButtonText: \"Yes, delete it!\",\n        buttonsStyling: false\n      }).then(result => {\n        if (result.value) {\n          this.deleteRow(item);\n          swal({\n            title: \"Deleted!\",\n            text: `You deleted ${item.name}`,\n            type: \"success\",\n            confirmButtonClass: \"md-button md-success btn-fill\",\n            buttonsStyling: false\n          });\n        }\n      });\n    },\n    deleteRow(item) {\n      let indexToDelete = this.tableData.findIndex(\n        tableRow => tableRow.id === item.id\n      );\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    }\n  },\n  mounted() {\n    // Fuse search initialization.\n    this.fuseSearch = new Fuse(this.tableData, {\n      keys: [\"name\", \"email\"],\n      threshold: 0.3\n    });\n  },\n  watch: {\n    /**\n     * Searches through the table data by a given query.\n     * NOTE: If you have a lot of data, it's recommended to do the search on the Server Side and only display the results here.\n     * @param value of the query\n     */\n    searchQuery(value) {\n      let result = this.tableData;\n      if (value !== \"\") {\n        result = this.fuseSearch.search(this.searchQuery);\n      }\n      this.searchedData = result;\n    }\n  }\n};\n</script>\n\n<style lang=\"css\" scoped>\n.md-card .md-card-actions{\n  border: 0;\n  margin-left: 20px;\n  margin-right: 20px;\n}\n</style>\n"],"sourceRoot":"src/pages/Dashboard/Tables"}]}