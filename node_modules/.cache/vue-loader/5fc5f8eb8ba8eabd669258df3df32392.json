{"remainingRequest":"d:\\work2\\vue-material-dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!d:\\work2\\vue-material-dashboard\\src\\pages\\Dashboard\\editcompany.vue?vue&type=script&lang=js&","dependencies":[{"path":"d:\\work2\\vue-material-dashboard\\src\\pages\\Dashboard\\editcompany.vue","mtime":1549458306429},{"path":"d:\\work2\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"d:\\work2\\vue-material-dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"d:\\work2\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"d:\\work2\\vue-material-dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from 'axios';\r\nimport { NavTabsCard } from \"@/components\"\r\n// const params = require('../_helpers/params.js');\r\n// const CONFIG = params.params; \r\n\r\nexport default {  \r\n    components: {\r\n      NavTabsCard        \r\n    },\r\n    data () {\r\n      return {\r\n          add: null,\r\n          showConfirm : false,\r\n          deleteConfirm: false,\r\n          balance: null,\r\n          supply: null,\r\n          msg: null,\r\n          from: null,\r\n          addrs:null,\r\n          userBal: null,\r\n          msgsss: false,\r\n          showTrans: false,\r\n          password: null,\r\n          id: null,\r\n          rows: [],\r\n          transactList:[],\r\n          columns: [\r\n              {label: 'From', type: 'String', field:this.sender},\r\n              {label: 'To', type: 'String', field:this.getName},\r\n              {label: 'Transaction Date', field: 'timestamp', formatFn:this.formatDate},\r\n              {label: 'Value', field:'value'}              \r\n            ],\r\n          user: {\r\n              email: null,\r\n              accountType: null,\r\n              firstName: null,\r\n              lastName: null,\r\n              token: null,\r\n              physicaladdress: null,\r\n              city: null,\r\n              country: null,\r\n              pincode: null,\r\n              status: null,\r\n              phoneNumber: null,\r\n              limit: null,\r\n              companyName: null,\r\n              companyCrn: null,\r\n              country: null,\r\n              addproofDocNo: null,\r\n              addproofType: null,\r\n              addproofTypefile: null,\r\n              idProoftypefile: null,\r\n              idProoftype: null,\r\n              idproofDocNo : null,\r\n              id: null,\r\n              address: null,\r\n              balance: null,             \r\n            },\r\n\r\n             company:{\r\n\r\n        \r\n      equalToSource: \"\",\r\n      equalToDest: \"\",\r\n      required: \"\",\r\n      email: \"\",\r\n      number: \"\",\r\n      address: \"\",\r\n      country: \"\",\r\n      phonenumber: \"\",\r\n      walletaddress:\"\",\r\n        },\r\n          selectedImg: null,\r\n          showImgModel: false\r\n        }\r\n    },\r\n    computed: {\r\n        // user() {\r\n        //     return this.$store.state.user.user\r\n        // },\r\n        alert() {\r\n          return this.$store.state.alert\r\n        },\r\n        loading() {\r\n          return this.$store.state.user.loading\r\n        },\r\n        country() {\r\n          return this.$store.state.user.country\r\n        },\r\n        userBalance () {\r\n          const token = window.localStorage.getItem('token');\r\n          // console.log(token)\r\n          var app=this;\r\n          \r\n         let id=this.$route.params.id\r\n         axios.get(\"http://localhost:3201/api/balance/\"+id,{headers:{'x-access-token': token}})          \r\n          .then((response) => {\r\n            this.userBal = response.data.data\r\n          })\r\n            return this.userBal\r\n        }\r\n    },\r\n\r\n  created () {\r\n            let id = this.$route.params.id\r\n            const token = window.localStorage.getItem('token')\r\n            var app = this;\r\n \r\n            axios.get(\"http://localhost:3201/api/company/\"+id,{headers:{'x-access-token': token}})    \r\n            .then(res => {\r\n                console.log(\"company\",res)\r\n                this.company.address = res.data.data.address\r\n                this.company.name = res.data.data.companyName\r\n                this.company.crn = res.data.data.companyCrn\r\n                this.company.country = res.data.data.country\r\n                this.company.email = res.data.data.email\r\n                this.company.phone = res.data.data.phoneNumber\r\n                this.company.accountType = res.data.data.accountType\r\n                this.company.physicaladdress = res.data.data.physicaladdress\r\n                // this.company.password = res.data.data.password\r\n            }) \r\n            .catch((error) => {\r\n                console.log(\"error\",error);\r\n            }); \r\n\r\n            let self = this\r\n            const { dispatch } = self.$store;\r\n              dispatch('user/getuser');\r\n              dispatch('user/getCountry');\r\n        },\r\n    methods: {\r\n\r\n\r\n\r\n        \r\n   \r\n         updateCompany() {\r\n            let id=this.$route.params.id\r\n            const token = window.localStorage.getItem('token');\r\n            console.log(token)\r\n            var app=this;\r\n\r\n            var update = {}\r\n            update.companyCrn = this.company.crn;\r\n            update.companyName = this.company.name;\r\n            update.phoneNumber = this.company.phone;\r\n            update.country = this.company.country;\r\n            update.physicaladdress = this.company.physicaladdress;\r\n          \r\n            var final = JSON.stringify(update)\r\n            console.log(\"update\", final)\r\n\r\n            axios.post(\"http://localhost:3201/api/updateCompany/\"+id, final,  {\"headers\":{'x-access-token':token,  'Content-Type' : 'application/json' }})\r\n              .then((response) => {\r\n                console.log(response)\r\n                app.$router.push('/companyList')\r\n            })       \r\n              .catch((error) => {\r\n                console.log(error);\r\n        }); \r\n     },\r\n\r\n\r\n\r\n\r\n  \r\n        onRowClick (params) {\r\n            console.log(params)\r\n            var finalhash = params.row.hash\r\n            window.open(\r\n              \"http://explorer.evenscoin.io/tx/\"+finalhash,\r\n              '_blank' // <- This is what makes it open in a new window.\r\n            );\r\n        },\r\n        userTxn () {\r\n            const token = window.localStorage.getItem('token');\r\n            var app=this;\r\n            let id=this.$route.params.id              \r\n            axios.get(\"http://localhost:3201/api/userTrans/\"+id,{headers:{'x-access-token': token}})\r\n              .then(response => {\r\n                  console.log('TRANS',response)\r\n                  app.rows = response.data.data      \r\n              })\r\n            axios.get(\"http://localhost:3201/api/userData/\",{headers:{'x-access-token': token}})\r\n              .then(response => {\r\n                  console.log('TRANS',response)\r\n                  app.transactList = response.data.data\r\n                  console.log('Txnlist',app.transactList)      \r\n              })\r\n        },\r\n        getName (rowObje) {\r\n            //console.log('USER',rowObje.to,rowObje.from)\r\n            let address = rowObje.to\r\n            let user =  this.transactList[address];\r\n            //console.log('nnn',user)\r\n            if(!user){\r\n              return (address.substring(0, 25) + '...');\r\n            }\r\n            else if((user.firstName)||(user.lastName)) {\r\n              return (user.firstName +' '+user.lastName)\r\n            }\r\n            else if (user.companyName) {\r\n              return user.companyName\r\n            }  \r\n        },\r\n        sender (rowObje) {\r\n            //console.log('USER',rowObje.to,rowObje.from)\r\n            let address = rowObje.from\r\n            let user =  this.transactList[address];\r\n            //console.log('nnn',user)\r\n            if(!user){\r\n              return address.substring(0, 10);\r\n            }\r\n            else if((user.firstName)||(user.lastName)) {\r\n              return (user.firstName +' '+user.lastName)\r\n            }\r\n            else if (user.companyName) {\r\n              return user.companyName\r\n            }  \r\n        },\r\n        separator(x) {\r\n            var sep = parseFloat(Math.round(x * 100) / 100).toFixed(2);\r\n            var num3 = sep.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n            return num3\r\n        },\r\n        formatDate (str) {\r\n            let datastr = this.$moment(parseInt(str) );\r\n            return datastr.format(\"YYYY-MM-DD\")\r\n        },\r\n        change (supp,bal) {\r\n            console.log(supp,bal)\r\n              if(supp>bal) {\r\n                this.msg = 'Insufficient balance'              \r\n                this.msgsss = true\r\n                this.showConfirm = false\r\n                console.log('Insufficient balance')\r\n              } else if(supp == null) {\r\n                this.msg= ''\r\n                this.msgsss = false\r\n              }else {\r\n              console.log('errorrrrrrrrrr')\r\n              }\r\n        },\r\n        update () {\r\n            console.log('transferred')\r\n            const token = window.localStorage.getItem('token');\r\n            console.log(token)\r\n            var app=this;\r\n            let id=this.$route.params.id\r\n            var data = {}\r\n\r\n              app.$validator.validateAll()\r\n                .then(res => {\r\n                  axios.get(\"http://localhost:3201/api/user\",{headers:{'x-access-token': token}})\r\n                    .then(res => {\r\n                      app.addrs = res.data.data.address\r\n                      data.from = app.addrs\r\n                      console.log('hello',app.addrs)\r\n                      data.to = app.user.address\r\n                      // data.firstName = app.user.firstName\r\n                      // data.lastName = app.user.lastName\r\n                      data.token = app.user.token \r\n                      data.value = app.supply\r\n                      data.company = app.user.id\r\n                      data.password = app.password\r\n                      console.log(data)\r\n                      axios.post(\"http://localhost:3201/api/transfer\",data, {headers:{'x-access-token': token}})\r\n                        .then(res => {\r\n                          console.log(res.data)\r\n                            this.showConfirm = false\r\n                            if(res.data.status == '400') {\r\n                              this.showConfirm = false\r\n                                    app.$toasted.show('Transaction failed',{ \r\n                                    fullWidth:false,\r\n                                    theme: \"bubble\", \r\n                                    position: \"bottom-right\",\r\n                                    duration : 10000\r\n                              })\r\n                                return \r\n                            }\r\n                            if(res.data.status == '401') {\r\n                              this.showConfirm = false\r\n                                    app.$toasted.show('Incorrect password',{ \r\n                                    fullWidth:false,\r\n                                    theme: \"bubble\", \r\n                                    position: \"bottom-right\",\r\n                                    duration : 10000\r\n                              })\r\n                                return \r\n                            }\r\n                          app.$toasted.show('Transfered successfully',{ \r\n                                fullWidth:false,\r\n                                theme: \"bubble\", \r\n                                position: \"bottom-right\",\r\n                                duration : 10000\r\n                          })\r\n                        }).catch(err => {\r\n                          app.$toasted.show('Transaction failed',{ \r\n                                fullWidth:false,\r\n                                theme: \"bubble\", \r\n                                position: \"bottom-right\",\r\n                                duration : 3000\r\n                            })\r\n                        })\r\n                })  \r\n          })  \r\n        },\r\n        suspendUser() {\r\n            console.log(\"inside suspend\")\r\n\r\n          const token = window.localStorage.getItem('token');\r\n          let id=this.$route.params.id\r\n          var app=this;\r\n        \r\n        axios.get(\"http://localhost:3201/api/user/\"+id,{headers:{'x-access-token': token}})          \r\n            .then((response) => {\r\n                console.log(response.data)             \r\n                this.user.status = response.data.data.status;\r\n\r\n                if(this.user.status == 'Active') {\r\n                    const url=\"http://localhost:3201/api/suspendUser/\"+id\r\n                    console.log(url)\r\n\r\n                    axios.post(url,{},{headers:{'x-access-token': token }})\r\n                        .then(res => {   \r\n                        console.log(res)\r\n                            app.$toasted.show('User is suspended',{ \r\n                            fullWidth:false,\r\n                            theme: \"bubble\", \r\n                            position: \"bottom-right\",\r\n                            duration: 3000 \r\n                        })\r\n                        window.location.reload();\r\n                        }).catch(function(err) {\r\n                          console.log('error in suspending user')\r\n                            app.$toasted.show('Not suspended.Try again',{ \r\n                            fullWidth:false,\r\n                            theme: \"bubble\", \r\n                            position: \"bottom-right\",\r\n                            duration : 3000\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"error\");\r\n            });      \r\n        },\r\n        activate() {\r\n            console.log(\"inside active\")\r\n\r\n          const token = window.localStorage.getItem('token');\r\n          let id=this.$route.params.id\r\n          var app=this;\r\n        \r\n        axios.get(\"http://localhost:3201/api/user/\"+id,{headers:{'x-access-token': token}})          \r\n            .then((response) => {\r\n                console.log(response.data)             \r\n                this.user.status = response.data.data.status;\r\n\r\n                if(this.user.status == 'Suspended') {\r\n                    const url=\"http://localhost:3201/api/makeActiveUser/\"+id\r\n                    console.log(url)\r\n\r\n                    axios.post(url,{},{headers:{'x-access-token': token }})\r\n                        .then(res => {   \r\n                        console.log(res)\r\n                            app.$toasted.show('User is activated',{ \r\n                            fullWidth:false,\r\n                            theme: \"bubble\", \r\n                            position: \"bottom-right\",\r\n                            duration: 3000 \r\n                        })\r\n                        window.location.reload();\r\n                        }).catch(function(err) {\r\n                          console.log('error in activating user')\r\n                            app.$toasted.show('Not suspended.Try again',{ \r\n                            fullWidth:false,\r\n                            theme: \"bubble\", \r\n                            position: \"bottom-right\",\r\n                            duration : 3000\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"error\");\r\n            });      \r\n        },\r\n        del() {\r\n            this.deleteConfirm = false\r\n            const token = window.localStorage.getItem('token');\r\n            let id = this.$route.params.id\r\n            var app = this;          \r\n\r\n            axios.post(\"http://localhost:3201/api/deleteUser/\"+id, {},{\"headers\":{'x-access-token':token}})\r\n              .then((response) => {\r\n                console.log(response.data)\r\n                if(response.data.status == '400') {\r\n                    app.$toasted.show('Not removed.Try again',{ \r\n                    fullWidth:false,\r\n                    theme: \"bubble\", \r\n                    position: \"bottom-right\",\r\n                    duration : 10000\r\n            })\r\n              return \r\n             }\r\n\r\n                if(response.data.status == '500') {\r\n                    app.$toasted.show('User not found',{ \r\n                    fullWidth:false,\r\n                    theme: \"bubble\", \r\n                    position: \"bottom-right\",\r\n                    duration : 10000\r\n              })\r\n              return \r\n             }\r\n                app.$toasted.show('User Removed',{ \r\n                    fullWidth:false,\r\n                    theme: \"bubble\", \r\n                    position: \"bottom-right\",\r\n                    duration : 5000\r\n              })\r\n                   app.$router.push('/userDetails')\r\n            })  \r\n              .catch((error) => {\r\n                console.log(error);\r\n                  app.$toasted.show('Not removed.Try again',{ \r\n                    fullWidth:false,\r\n                    theme: \"bubble\", \r\n                    position: \"bottom-right\",\r\n                    duration : 3000\r\n                })\r\n        });    \r\n\r\n          },\r\n          transfer (supply) {\r\n            this.showTrans = false\r\n            console.log(supply)\r\n            if(supply < this.balance) {\r\n            this.showConfirm = true\r\n            } else {\r\n              this.showConfirm = false\r\n              \r\n            }\r\n            //this.showTrans = false\r\n          },\r\n          box () {\r\n            this.showTrans = true\r\n\r\n          },\r\n          deleteUser () {\r\n            this.deleteConfirm = true\r\n          },\r\n          close () {\r\n            this.showTrans = false\r\n          },\r\n          hide () {\r\n            this.showConfirm = false\r\n          },\r\n          getImage(img) {\r\n            return \"http://localhost:3201/static/img/\"+img\r\n          },\r\n          showImg(img) {\r\n            let self = this;\r\n            self.selectedImg = \"http://localhost:3201/static/img/\"+img\r\n            self.showImgModel = true\r\n          },  \r\n          updateProfile () {\r\n            let id=this.$route.params.id\r\n            const token = window.localStorage.getItem('token');\r\n            var app=this;\r\n\r\n            if(this.user.accountType != 'Company') {\r\n              var value = {}\r\n              value.firstName = this.user.firstName;\r\n              value.lastName = this.user.lastName;\r\n              value.country = this.user.country;\r\n              // value.limit = this.user.limit;\r\n              value.companyName = this.user.companyName;\r\n              value.phoneNumber = this.user.phoneNumber;\r\n              value.physicaladdress = this.user.physicaladdress;       \r\n              \r\n              var update = JSON.stringify(value)\r\n              console.log(\"update\", update)\r\n                axios.post(\"http://localhost:3201/api/updateUser/\"+id, update,  {headers:{'x-access-token':token,  'Content-Type' : 'application/json' }})\r\n                  .then((response) => {\r\n                    console.log(response)\r\n                    app.$toasted.show('Updated successfully',{ \r\n                        fullWidth:false,\r\n                        theme: \"bubble\", \r\n                        position: \"bottom-right\",\r\n                        duration : 5000\r\n                    })\r\n                    // app.$router.push('/userDetails')\r\n                })       \r\n                  .catch((error) => {\r\n                    console.log(error);\r\n                    app.$toasted.show('Coudnot update',{ \r\n                        fullWidth:false,\r\n                        theme: \"bubble\", \r\n                        position: \"bottom-right\",\r\n                        duration : 5000\r\n                    })\r\n                });  \r\n            } \r\n            else if (this.user.accountType == 'Company') {\r\n              var entity = {}\r\n              entity.companyName = this.user.companyName;\r\n              entity.companyCrn = this.user.companyCrn;\r\n              entity.country = this.user.country;\r\n              entity.phoneNumber = this.user.phoneNumber;\r\n              entity.physicaladdress = this.user.physicaladdress;       \r\n          \r\n              var save = JSON.stringify(entity)\r\n              console.log(\"update\", save)\r\n              axios.post(\"http://localhost:3201/api/savecompany\"+id, save,  {headers:{'x-access-token':token,  'Content-Type' : 'application/json' }})\r\n                .then((response) => {\r\n                  console.log(response)\r\n                  app.$toasted.show('Updated successfully',{ \r\n                        fullWidth:false,\r\n                        theme: \"bubble\", \r\n                        position: \"bottom-right\",\r\n                        duration : 5000\r\n                  })\r\n                // app.$router.push('/userDetails')\r\n              })       \r\n                .catch((error) => {\r\n                  console.log(error);\r\n                  app.$toasted.show('Coudnot update',{ \r\n                      fullWidth:false,\r\n                      theme: \"bubble\", \r\n                      position: \"bottom-right\",\r\n                      duration : 5000\r\n                  })\r\n              });  \r\n            }            \r\n          },\r\n          closeTab() {\r\n            var app = this\r\n            app.$router.push('/userDetails')\r\n          },\r\n          rejectKyc() {\r\n            const token = window.localStorage.getItem('token');\r\n            let id = this.$route.params.id\r\n            var app = this;          \r\n\r\n            axios.post(\"http://localhost:3201/api/rejectKyc/\"+id, {},{\"headers\":{'x-access-token':token}})\r\n              .then((response) => {\r\n                console.log(response.data)\r\n                  // app.$router.push('/userDetails')\r\n                  app.$toasted.show('KYC rejected',{ \r\n                      fullWidth:false,\r\n                      theme: \"bubble\", \r\n                      position: \"bottom-right\",\r\n                      duration : 5000\r\n                  })\r\n            })  \r\n              .catch((error) => {\r\n                console.log(error);\r\n                  app.$toasted.show('Not rejected.Try again',{ \r\n                      fullWidth:false,\r\n                      theme: \"bubble\", \r\n                      position: \"bottom-right\",\r\n                      duration : 3000\r\n                  })\r\n              });    \r\n          },\r\n          approveKyc() {\r\n            const token = window.localStorage.getItem('token');\r\n            let id = this.$route.params.id\r\n            var app = this;          \r\n\r\n            axios.post(\"http://localhost:3201/api/approveKyc/\"+id, {},{\"headers\":{'x-access-token':token}})\r\n              .then((response) => {\r\n                console.log(response.data)\r\n                app.$toasted.show('KYC approved',{ \r\n                      fullWidth:false,\r\n                      theme: \"bubble\", \r\n                      position: \"bottom-right\",\r\n                      duration : 5000\r\n                  })\r\n                // app.$router.push('/userDetails')\r\n              })  \r\n              .catch((error) => {\r\n                console.log(error);\r\n                  app.$toasted.show('Not approved.Try again',{ \r\n                      fullWidth:false,\r\n                      theme: \"bubble\", \r\n                      position: \"bottom-right\",\r\n                      duration : 3000\r\n                  })\r\n              });    \r\n          },\r\n   }\r\n}\r\n",{"version":3,"sources":["editcompany.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"editcompany.vue","sourceRoot":"src/pages/Dashboard","sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"md-layout\">\r\n      <div class=\"md-layout-item\">\r\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n          <nav-tabs-card>\r\n            <template slot=\"content\">\r\n              <div class=\"tabWidth\">\r\n                <span class=\"md-nav-tabs-title\">Company:</span>\r\n                <md-tabs md-sync-route class=\"md-info\" md-alignment=\"left\">\r\n                  <md-tab id=\"tab-home\" md-label=\"Basic Info\" md-icon=\"info\">\r\n                    <div class=\"userdetails\">\r\n                      <div class=\"column1\">\r\n                        <div class=\"md-layout-item md-small-size-50 md-medium-size-50\">\r\n                           <md-field>\r\n                          <label for=\"name\"> Company Name</label>\r\n                          <md-input name=\"name\" id=\"name\" v-model=\"company.name\" />\r\n                         <!-- <label for=\"email\">  Email</label>\r\n                         <md-input name=\"email\" id=\"email\" v-model=\"company.email\" disabled />                                                     -->\r\n                        </md-field>\r\n                        </div>\r\n                         <div class=\"md-layout-item md-small-size-50 md-medium-size-50\">\r\n                          <md-field>\r\n                        <label for=\"crn\">Reg number</label>\r\n                        <md-input name=\"crn\" id=\"crn\" v-model=\"company.crn\" />                                                     \r\n                      </md-field>\r\n                        </div>\r\n                      </div>\r\n                      <div class =\"column2\">\r\n                        <div class=\"md-layout-item md-small-size-50 md-medium-size-50\">\r\n                        <md-field>\r\n                        <label for=\"address\">Address</label>\r\n                        <md-input name=\"address\" id=\"address\" v-model=\"company.physicaladdress\" />\r\n                        <!-- <label for=\"crn\">Reg number</label>\r\n                        <md-input name=\"crn\" id=\"crn\" v-model=\"company.crn\" />                                                     -->\r\n                      </md-field>\r\n                        </div>\r\n                       <div class=\"md-layout-item md-small-size-50 md-medium-size-50\">\r\n                          <md-field>\r\n                        <label for=\"country\">Country</label>\r\n                        <md-select v-model=\"company.country\" name=\"country\" id=\"country\" placeholder=\"country\">\r\n                          <md-option v-for=\"item in country\" :key=\"item.name\" :value=\"item.name\">{{item.name}}</md-option>\r\n                        </md-select>\r\n                        <!-- <label for=\"address\">Address</label>\r\n                        <md-input name=\"address\" id=\"address\" v-model=\"company.physicaladdress\" />                                                     -->\r\n                      </md-field>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                    <div class =\"column3\">\r\n                        <div class=\"md-layout-item md-small-size-50 md-medium-size-50\">\r\n                          <md-field>\r\n                       <label for=\"phone\">Phone number</label>\r\n                       <md-input name=\"phone\" id=\"phone\" v-model=\"company.phone\" /> \r\n                      <!-- <label for=\"country\">Country</label>\r\n                      <md-select v-model=\"company.country\" name=\"country\" id=\"country\" placeholder=\"country\">\r\n                        <md-option v-for=\"item in country\" :key=\"item.name\" :value=\"item.name\">{{item.name}}</md-option>\r\n                      </md-select> -->\r\n                     </md-field>\r\n                        </div>\r\n                       <div class=\"md-layout-item md-small-size-50 md-medium-size-50\">\r\n                           <md-field>\r\n                      <label for=\"address\">Wallet Address</label>\r\n                      <md-input name=\"address\" id=\"address\" v-model=\"company.address\" disabled/> \r\n                     </md-field>\r\n                        </div>\r\n                      </div>\r\n                     \r\n                   <md-button class=\"md-info\"\r\n         style=\"float:right\"\r\n         native-type=\"submit\"\r\n         @click=\"updateCompany\"\r\n         >\r\n                <span class=\"md-label\">\r\n                  <md-icon class=\"material-icons\">priority_high</md-icon>\r\n                </span>\r\n                update\r\n              </md-button>\r\n                      \r\n                    </div>                       \r\n   <!-- end         -->\r\n                    <md-dialog :md-active.sync=\"deleteConfirm\" >\r\n                      <form novalidate @submit.prevent=\"del\">\r\n                        <div class=\"addec\"><br>\r\n                          <label for=\"symbol\">Do you want to delete?</label> <br><br>\r\n                        </div>\r\n                        <md-dialog-actions>\r\n                          <md-button class=\"md-danger actionbtn\" @click=\"deleteConfirm=false\">cancel</md-button>\r\n                            &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n                            &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n                          <md-button class=\"md-info actionbtn cash\" type=\"submit\">Confirm</md-button>\r\n                        </md-dialog-actions>\r\n                      </form>\r\n                    </md-dialog>\r\n<!-- 2 -->\r\n                    <div class=\"box\" v-if=\"showTrans\">\r\n                      <div class=\"top\"><br>\r\n                        <md-field >\r\n                          <label for=\"symbol\">Balance</label>\r\n                          <md-input name=\"balance\" v-model=\"balance\" disabled/>\r\n                        </md-field>\r\n                        <md-field :class=\"{error: errors.has('supply')}\">\r\n                          <label>Supply</label>\r\n                          <md-input required v-validate=\"'required|min:1|numeric'\" @change=\"change(supply,balance)\" \r\n                            type=\"number\" name=\"supply\" id=\"supply\" v-model=\"supply\"></md-input>\r\n                          <span class=\"error\" v-if=\"errors.has('supply')\">{{errors.first('supply')}}</span> <hr>\r\n                          <span class=\"error\" v-if=\"msgsss\">{{msg}}</span>\r\n                        </md-field>\r\n                      </div>\r\n                      <md-button class=\"md-danger actionbtn textbtn\" @click=\"close\">Close</md-button>\r\n                      <md-button class=\"md-info actionbtn cash1 textbtn \" v-if=\"supply\" @click=\"transfer(supply)\" >Transfer</md-button>\r\n                    </div>\r\n<!-- 3 -->\r\n                    <md-dialog :md-active.sync=\"showConfirm\" >\r\n                      <form novalidate @submit.prevent=\"update\">\r\n                        <div class=\"addec\">\r\n                          <label for=\"symbol\">Enter password to confirm transfer</label>\r\n                        </div>\r\n                        <div class=\"modelpass\">\r\n                          <md-field  :class=\"{error: errors.has('password')}\">\r\n                            <label >Password</label>\r\n                            <md-input required v-validate=\"'required'\"  type=\"password\" name=\"password\" \r\n                              id=\"password\" v-model=\"password\"></md-input>\r\n                            <span class=\"error\" v-if=\"errors.has('password')\">{{errors.first('password')}}</span>\r\n                          </md-field>\r\n                        </div>\r\n                        <md-dialog-actions>\r\n                          <md-button class=\"  md-danger actionbtn\" @click=\"hide\">cancel</md-button>\r\n                          <md-button class=\"  md-success actionbtn\" type=\"submit\">Confirm</md-button>\r\n                        </md-dialog-actions>\r\n                      </form>\r\n                    </md-dialog>\r\n                  </md-tab>\r\n\r\n\r\n\r\n                </md-tabs>\r\n              </div>\r\n            </template>\r\n          </nav-tabs-card>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { NavTabsCard } from \"@/components\"\r\n// const params = require('../_helpers/params.js');\r\n// const CONFIG = params.params; \r\n\r\nexport default {  \r\n    components: {\r\n      NavTabsCard        \r\n    },\r\n    data () {\r\n      return {\r\n          add: null,\r\n          showConfirm : false,\r\n          deleteConfirm: false,\r\n          balance: null,\r\n          supply: null,\r\n          msg: null,\r\n          from: null,\r\n          addrs:null,\r\n          userBal: null,\r\n          msgsss: false,\r\n          showTrans: false,\r\n          password: null,\r\n          id: null,\r\n          rows: [],\r\n          transactList:[],\r\n          columns: [\r\n              {label: 'From', type: 'String', field:this.sender},\r\n              {label: 'To', type: 'String', field:this.getName},\r\n              {label: 'Transaction Date', field: 'timestamp', formatFn:this.formatDate},\r\n              {label: 'Value', field:'value'}              \r\n            ],\r\n          user: {\r\n              email: null,\r\n              accountType: null,\r\n              firstName: null,\r\n              lastName: null,\r\n              token: null,\r\n              physicaladdress: null,\r\n              city: null,\r\n              country: null,\r\n              pincode: null,\r\n              status: null,\r\n              phoneNumber: null,\r\n              limit: null,\r\n              companyName: null,\r\n              companyCrn: null,\r\n              country: null,\r\n              addproofDocNo: null,\r\n              addproofType: null,\r\n              addproofTypefile: null,\r\n              idProoftypefile: null,\r\n              idProoftype: null,\r\n              idproofDocNo : null,\r\n              id: null,\r\n              address: null,\r\n              balance: null,             \r\n            },\r\n\r\n             company:{\r\n\r\n        \r\n      equalToSource: \"\",\r\n      equalToDest: \"\",\r\n      required: \"\",\r\n      email: \"\",\r\n      number: \"\",\r\n      address: \"\",\r\n      country: \"\",\r\n      phonenumber: \"\",\r\n      walletaddress:\"\",\r\n        },\r\n          selectedImg: null,\r\n          showImgModel: false\r\n        }\r\n    },\r\n    computed: {\r\n        // user() {\r\n        //     return this.$store.state.user.user\r\n        // },\r\n        alert() {\r\n          return this.$store.state.alert\r\n        },\r\n        loading() {\r\n          return this.$store.state.user.loading\r\n        },\r\n        country() {\r\n          return this.$store.state.user.country\r\n        },\r\n        userBalance () {\r\n          const token = window.localStorage.getItem('token');\r\n          // console.log(token)\r\n          var app=this;\r\n          \r\n         let id=this.$route.params.id\r\n         axios.get(\"http://localhost:3201/api/balance/\"+id,{headers:{'x-access-token': token}})          \r\n          .then((response) => {\r\n            this.userBal = response.data.data\r\n          })\r\n            return this.userBal\r\n        }\r\n    },\r\n\r\n  created () {\r\n            let id = this.$route.params.id\r\n            const token = window.localStorage.getItem('token')\r\n            var app = this;\r\n \r\n            axios.get(\"http://localhost:3201/api/company/\"+id,{headers:{'x-access-token': token}})    \r\n            .then(res => {\r\n                console.log(\"company\",res)\r\n                this.company.address = res.data.data.address\r\n                this.company.name = res.data.data.companyName\r\n                this.company.crn = res.data.data.companyCrn\r\n                this.company.country = res.data.data.country\r\n                this.company.email = res.data.data.email\r\n                this.company.phone = res.data.data.phoneNumber\r\n                this.company.accountType = res.data.data.accountType\r\n                this.company.physicaladdress = res.data.data.physicaladdress\r\n                // this.company.password = res.data.data.password\r\n            }) \r\n            .catch((error) => {\r\n                console.log(\"error\",error);\r\n            }); \r\n\r\n            let self = this\r\n            const { dispatch } = self.$store;\r\n              dispatch('user/getuser');\r\n              dispatch('user/getCountry');\r\n        },\r\n    methods: {\r\n\r\n\r\n\r\n        \r\n   \r\n         updateCompany() {\r\n            let id=this.$route.params.id\r\n            const token = window.localStorage.getItem('token');\r\n            console.log(token)\r\n            var app=this;\r\n\r\n            var update = {}\r\n            update.companyCrn = this.company.crn;\r\n            update.companyName = this.company.name;\r\n            update.phoneNumber = this.company.phone;\r\n            update.country = this.company.country;\r\n            update.physicaladdress = this.company.physicaladdress;\r\n          \r\n            var final = JSON.stringify(update)\r\n            console.log(\"update\", final)\r\n\r\n            axios.post(\"http://localhost:3201/api/updateCompany/\"+id, final,  {\"headers\":{'x-access-token':token,  'Content-Type' : 'application/json' }})\r\n              .then((response) => {\r\n                console.log(response)\r\n                app.$router.push('/companyList')\r\n            })       \r\n              .catch((error) => {\r\n                console.log(error);\r\n        }); \r\n     },\r\n\r\n\r\n\r\n\r\n  \r\n        onRowClick (params) {\r\n            console.log(params)\r\n            var finalhash = params.row.hash\r\n            window.open(\r\n              \"http://explorer.evenscoin.io/tx/\"+finalhash,\r\n              '_blank' // <- This is what makes it open in a new window.\r\n            );\r\n        },\r\n        userTxn () {\r\n            const token = window.localStorage.getItem('token');\r\n            var app=this;\r\n            let id=this.$route.params.id              \r\n            axios.get(\"http://localhost:3201/api/userTrans/\"+id,{headers:{'x-access-token': token}})\r\n              .then(response => {\r\n                  console.log('TRANS',response)\r\n                  app.rows = response.data.data      \r\n              })\r\n            axios.get(\"http://localhost:3201/api/userData/\",{headers:{'x-access-token': token}})\r\n              .then(response => {\r\n                  console.log('TRANS',response)\r\n                  app.transactList = response.data.data\r\n                  console.log('Txnlist',app.transactList)      \r\n              })\r\n        },\r\n        getName (rowObje) {\r\n            //console.log('USER',rowObje.to,rowObje.from)\r\n            let address = rowObje.to\r\n            let user =  this.transactList[address];\r\n            //console.log('nnn',user)\r\n            if(!user){\r\n              return (address.substring(0, 25) + '...');\r\n            }\r\n            else if((user.firstName)||(user.lastName)) {\r\n              return (user.firstName +' '+user.lastName)\r\n            }\r\n            else if (user.companyName) {\r\n              return user.companyName\r\n            }  \r\n        },\r\n        sender (rowObje) {\r\n            //console.log('USER',rowObje.to,rowObje.from)\r\n            let address = rowObje.from\r\n            let user =  this.transactList[address];\r\n            //console.log('nnn',user)\r\n            if(!user){\r\n              return address.substring(0, 10);\r\n            }\r\n            else if((user.firstName)||(user.lastName)) {\r\n              return (user.firstName +' '+user.lastName)\r\n            }\r\n            else if (user.companyName) {\r\n              return user.companyName\r\n            }  \r\n        },\r\n        separator(x) {\r\n            var sep = parseFloat(Math.round(x * 100) / 100).toFixed(2);\r\n            var num3 = sep.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n            return num3\r\n        },\r\n        formatDate (str) {\r\n            let datastr = this.$moment(parseInt(str) );\r\n            return datastr.format(\"YYYY-MM-DD\")\r\n        },\r\n        change (supp,bal) {\r\n            console.log(supp,bal)\r\n              if(supp>bal) {\r\n                this.msg = 'Insufficient balance'              \r\n                this.msgsss = true\r\n                this.showConfirm = false\r\n                console.log('Insufficient balance')\r\n              } else if(supp == null) {\r\n                this.msg= ''\r\n                this.msgsss = false\r\n              }else {\r\n              console.log('errorrrrrrrrrr')\r\n              }\r\n        },\r\n        update () {\r\n            console.log('transferred')\r\n            const token = window.localStorage.getItem('token');\r\n            console.log(token)\r\n            var app=this;\r\n            let id=this.$route.params.id\r\n            var data = {}\r\n\r\n              app.$validator.validateAll()\r\n                .then(res => {\r\n                  axios.get(\"http://localhost:3201/api/user\",{headers:{'x-access-token': token}})\r\n                    .then(res => {\r\n                      app.addrs = res.data.data.address\r\n                      data.from = app.addrs\r\n                      console.log('hello',app.addrs)\r\n                      data.to = app.user.address\r\n                      // data.firstName = app.user.firstName\r\n                      // data.lastName = app.user.lastName\r\n                      data.token = app.user.token \r\n                      data.value = app.supply\r\n                      data.company = app.user.id\r\n                      data.password = app.password\r\n                      console.log(data)\r\n                      axios.post(\"http://localhost:3201/api/transfer\",data, {headers:{'x-access-token': token}})\r\n                        .then(res => {\r\n                          console.log(res.data)\r\n                            this.showConfirm = false\r\n                            if(res.data.status == '400') {\r\n                              this.showConfirm = false\r\n                                    app.$toasted.show('Transaction failed',{ \r\n                                    fullWidth:false,\r\n                                    theme: \"bubble\", \r\n                                    position: \"bottom-right\",\r\n                                    duration : 10000\r\n                              })\r\n                                return \r\n                            }\r\n                            if(res.data.status == '401') {\r\n                              this.showConfirm = false\r\n                                    app.$toasted.show('Incorrect password',{ \r\n                                    fullWidth:false,\r\n                                    theme: \"bubble\", \r\n                                    position: \"bottom-right\",\r\n                                    duration : 10000\r\n                              })\r\n                                return \r\n                            }\r\n                          app.$toasted.show('Transfered successfully',{ \r\n                                fullWidth:false,\r\n                                theme: \"bubble\", \r\n                                position: \"bottom-right\",\r\n                                duration : 10000\r\n                          })\r\n                        }).catch(err => {\r\n                          app.$toasted.show('Transaction failed',{ \r\n                                fullWidth:false,\r\n                                theme: \"bubble\", \r\n                                position: \"bottom-right\",\r\n                                duration : 3000\r\n                            })\r\n                        })\r\n                })  \r\n          })  \r\n        },\r\n        suspendUser() {\r\n            console.log(\"inside suspend\")\r\n\r\n          const token = window.localStorage.getItem('token');\r\n          let id=this.$route.params.id\r\n          var app=this;\r\n        \r\n        axios.get(\"http://localhost:3201/api/user/\"+id,{headers:{'x-access-token': token}})          \r\n            .then((response) => {\r\n                console.log(response.data)             \r\n                this.user.status = response.data.data.status;\r\n\r\n                if(this.user.status == 'Active') {\r\n                    const url=\"http://localhost:3201/api/suspendUser/\"+id\r\n                    console.log(url)\r\n\r\n                    axios.post(url,{},{headers:{'x-access-token': token }})\r\n                        .then(res => {   \r\n                        console.log(res)\r\n                            app.$toasted.show('User is suspended',{ \r\n                            fullWidth:false,\r\n                            theme: \"bubble\", \r\n                            position: \"bottom-right\",\r\n                            duration: 3000 \r\n                        })\r\n                        window.location.reload();\r\n                        }).catch(function(err) {\r\n                          console.log('error in suspending user')\r\n                            app.$toasted.show('Not suspended.Try again',{ \r\n                            fullWidth:false,\r\n                            theme: \"bubble\", \r\n                            position: \"bottom-right\",\r\n                            duration : 3000\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"error\");\r\n            });      \r\n        },\r\n        activate() {\r\n            console.log(\"inside active\")\r\n\r\n          const token = window.localStorage.getItem('token');\r\n          let id=this.$route.params.id\r\n          var app=this;\r\n        \r\n        axios.get(\"http://localhost:3201/api/user/\"+id,{headers:{'x-access-token': token}})          \r\n            .then((response) => {\r\n                console.log(response.data)             \r\n                this.user.status = response.data.data.status;\r\n\r\n                if(this.user.status == 'Suspended') {\r\n                    const url=\"http://localhost:3201/api/makeActiveUser/\"+id\r\n                    console.log(url)\r\n\r\n                    axios.post(url,{},{headers:{'x-access-token': token }})\r\n                        .then(res => {   \r\n                        console.log(res)\r\n                            app.$toasted.show('User is activated',{ \r\n                            fullWidth:false,\r\n                            theme: \"bubble\", \r\n                            position: \"bottom-right\",\r\n                            duration: 3000 \r\n                        })\r\n                        window.location.reload();\r\n                        }).catch(function(err) {\r\n                          console.log('error in activating user')\r\n                            app.$toasted.show('Not suspended.Try again',{ \r\n                            fullWidth:false,\r\n                            theme: \"bubble\", \r\n                            position: \"bottom-right\",\r\n                            duration : 3000\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"error\");\r\n            });      \r\n        },\r\n        del() {\r\n            this.deleteConfirm = false\r\n            const token = window.localStorage.getItem('token');\r\n            let id = this.$route.params.id\r\n            var app = this;          \r\n\r\n            axios.post(\"http://localhost:3201/api/deleteUser/\"+id, {},{\"headers\":{'x-access-token':token}})\r\n              .then((response) => {\r\n                console.log(response.data)\r\n                if(response.data.status == '400') {\r\n                    app.$toasted.show('Not removed.Try again',{ \r\n                    fullWidth:false,\r\n                    theme: \"bubble\", \r\n                    position: \"bottom-right\",\r\n                    duration : 10000\r\n            })\r\n              return \r\n             }\r\n\r\n                if(response.data.status == '500') {\r\n                    app.$toasted.show('User not found',{ \r\n                    fullWidth:false,\r\n                    theme: \"bubble\", \r\n                    position: \"bottom-right\",\r\n                    duration : 10000\r\n              })\r\n              return \r\n             }\r\n                app.$toasted.show('User Removed',{ \r\n                    fullWidth:false,\r\n                    theme: \"bubble\", \r\n                    position: \"bottom-right\",\r\n                    duration : 5000\r\n              })\r\n                   app.$router.push('/userDetails')\r\n            })  \r\n              .catch((error) => {\r\n                console.log(error);\r\n                  app.$toasted.show('Not removed.Try again',{ \r\n                    fullWidth:false,\r\n                    theme: \"bubble\", \r\n                    position: \"bottom-right\",\r\n                    duration : 3000\r\n                })\r\n        });    \r\n\r\n          },\r\n          transfer (supply) {\r\n            this.showTrans = false\r\n            console.log(supply)\r\n            if(supply < this.balance) {\r\n            this.showConfirm = true\r\n            } else {\r\n              this.showConfirm = false\r\n              \r\n            }\r\n            //this.showTrans = false\r\n          },\r\n          box () {\r\n            this.showTrans = true\r\n\r\n          },\r\n          deleteUser () {\r\n            this.deleteConfirm = true\r\n          },\r\n          close () {\r\n            this.showTrans = false\r\n          },\r\n          hide () {\r\n            this.showConfirm = false\r\n          },\r\n          getImage(img) {\r\n            return \"http://localhost:3201/static/img/\"+img\r\n          },\r\n          showImg(img) {\r\n            let self = this;\r\n            self.selectedImg = \"http://localhost:3201/static/img/\"+img\r\n            self.showImgModel = true\r\n          },  \r\n          updateProfile () {\r\n            let id=this.$route.params.id\r\n            const token = window.localStorage.getItem('token');\r\n            var app=this;\r\n\r\n            if(this.user.accountType != 'Company') {\r\n              var value = {}\r\n              value.firstName = this.user.firstName;\r\n              value.lastName = this.user.lastName;\r\n              value.country = this.user.country;\r\n              // value.limit = this.user.limit;\r\n              value.companyName = this.user.companyName;\r\n              value.phoneNumber = this.user.phoneNumber;\r\n              value.physicaladdress = this.user.physicaladdress;       \r\n              \r\n              var update = JSON.stringify(value)\r\n              console.log(\"update\", update)\r\n                axios.post(\"http://localhost:3201/api/updateUser/\"+id, update,  {headers:{'x-access-token':token,  'Content-Type' : 'application/json' }})\r\n                  .then((response) => {\r\n                    console.log(response)\r\n                    app.$toasted.show('Updated successfully',{ \r\n                        fullWidth:false,\r\n                        theme: \"bubble\", \r\n                        position: \"bottom-right\",\r\n                        duration : 5000\r\n                    })\r\n                    // app.$router.push('/userDetails')\r\n                })       \r\n                  .catch((error) => {\r\n                    console.log(error);\r\n                    app.$toasted.show('Coudnot update',{ \r\n                        fullWidth:false,\r\n                        theme: \"bubble\", \r\n                        position: \"bottom-right\",\r\n                        duration : 5000\r\n                    })\r\n                });  \r\n            } \r\n            else if (this.user.accountType == 'Company') {\r\n              var entity = {}\r\n              entity.companyName = this.user.companyName;\r\n              entity.companyCrn = this.user.companyCrn;\r\n              entity.country = this.user.country;\r\n              entity.phoneNumber = this.user.phoneNumber;\r\n              entity.physicaladdress = this.user.physicaladdress;       \r\n          \r\n              var save = JSON.stringify(entity)\r\n              console.log(\"update\", save)\r\n              axios.post(\"http://localhost:3201/api/savecompany\"+id, save,  {headers:{'x-access-token':token,  'Content-Type' : 'application/json' }})\r\n                .then((response) => {\r\n                  console.log(response)\r\n                  app.$toasted.show('Updated successfully',{ \r\n                        fullWidth:false,\r\n                        theme: \"bubble\", \r\n                        position: \"bottom-right\",\r\n                        duration : 5000\r\n                  })\r\n                // app.$router.push('/userDetails')\r\n              })       \r\n                .catch((error) => {\r\n                  console.log(error);\r\n                  app.$toasted.show('Coudnot update',{ \r\n                      fullWidth:false,\r\n                      theme: \"bubble\", \r\n                      position: \"bottom-right\",\r\n                      duration : 5000\r\n                  })\r\n              });  \r\n            }            \r\n          },\r\n          closeTab() {\r\n            var app = this\r\n            app.$router.push('/userDetails')\r\n          },\r\n          rejectKyc() {\r\n            const token = window.localStorage.getItem('token');\r\n            let id = this.$route.params.id\r\n            var app = this;          \r\n\r\n            axios.post(\"http://localhost:3201/api/rejectKyc/\"+id, {},{\"headers\":{'x-access-token':token}})\r\n              .then((response) => {\r\n                console.log(response.data)\r\n                  // app.$router.push('/userDetails')\r\n                  app.$toasted.show('KYC rejected',{ \r\n                      fullWidth:false,\r\n                      theme: \"bubble\", \r\n                      position: \"bottom-right\",\r\n                      duration : 5000\r\n                  })\r\n            })  \r\n              .catch((error) => {\r\n                console.log(error);\r\n                  app.$toasted.show('Not rejected.Try again',{ \r\n                      fullWidth:false,\r\n                      theme: \"bubble\", \r\n                      position: \"bottom-right\",\r\n                      duration : 3000\r\n                  })\r\n              });    \r\n          },\r\n          approveKyc() {\r\n            const token = window.localStorage.getItem('token');\r\n            let id = this.$route.params.id\r\n            var app = this;          \r\n\r\n            axios.post(\"http://localhost:3201/api/approveKyc/\"+id, {},{\"headers\":{'x-access-token':token}})\r\n              .then((response) => {\r\n                console.log(response.data)\r\n                app.$toasted.show('KYC approved',{ \r\n                      fullWidth:false,\r\n                      theme: \"bubble\", \r\n                      position: \"bottom-right\",\r\n                      duration : 5000\r\n                  })\r\n                // app.$router.push('/userDetails')\r\n              })  \r\n              .catch((error) => {\r\n                console.log(error);\r\n                  app.$toasted.show('Not approved.Try again',{ \r\n                      fullWidth:false,\r\n                      theme: \"bubble\", \r\n                      position: \"bottom-right\",\r\n                      duration : 3000\r\n                  })\r\n              });    \r\n          },\r\n   }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  .md-card [data-background-color=\"orange\"], .md-card .md-tabs.md-success .md-tabs-navigation {\r\n    background: linear-gradient(60deg, #000046, #1CB5E0);\r\n    box-shadow: 0 12px 20px -10px rgba(76, 175, 80, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(76, 175, 80, 0.2);\r\n  }\r\n\r\n  .token {\r\n    background:linear-gradient(60deg,#bc4e97,#f80759) !important;\r\n    color: #FFFFFF !important;\r\n  }\r\n\r\n\r\n  .md-card .md-card-header .title {\r\n    color: #ffffffc9;\r\n  }\r\n\r\n  .error {\r\n    color: red;\r\n  }\r\n \r\n   .column1 {\r\n    float: left;\r\n    right: 9px;\r\n    width: 100%;\r\n    padding: 10px;\r\n  }\r\n\r\n  .textbtn {\r\n    float:right !important;\r\n  }\r\n\r\n  .column2 {\r\n    float: left;\r\n    width: 50%;\r\n    padding: 10px;\r\n  }\r\n\r\n  .w3-container {\r\n    position: relative;\r\n    left: 40%;\r\n    bottom: 5%;\r\n  }\r\n\r\n  .box {\r\n    background: white;\r\n    width: 35%;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n    bottom: 25%;\r\n    position: absolute;\r\n    margin-left: 62.256666%;\r\n    z-index: 10;\r\n    height: 54%; \r\n    font-size:136%;\r\n    color: black;\r\n  }\r\n\r\n  .md-field {\r\n    width: 100%;\r\n    min-height: 48px;\r\n    margin: 0px 0 4px !important;\r\n    padding-top: 16px;\r\n    display: flex;\r\n    position: relative;\r\n    font-family: inherit;\r\n  }\r\n\r\n  .actionbtn {\r\n    margin: 0px !important;    \r\n    margin-left: 3%!important;\r\n  }\r\n\r\n  .addec {\r\n    padding: 30px\r\n  }\r\n\r\n  .kyc_box {\r\n    position: relative;\r\n    bottom: 44px !important;\r\n  }\r\n\r\n  /* .userdetails {\r\n    height: 196px;\r\n  } */\r\n\r\n  .top {\r\n    padding-left: 3%;\r\n    padding-bottom: 4%;\r\n  }\r\n  .modelpass {\r\n    padding-left:3% !important;\r\n  }\r\n\r\n  .md-card .md-card-header {\r\n    background-color: #9e9e9e47;\r\n  }\r\n\r\n  .idproof {\r\n    width: 386px;\r\n    height: 115px;\r\n    margin: 4px;\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    position: relative;\r\n    top: 30px;\r\n  }\r\n\r\n  .addproof {\r\n    width: 386px;\r\n    height: 115px;\r\n    margin: 4px;\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    position: relative;\r\n    top: 30px;\r\n  }\r\n\r\n  .idcaption {\r\n    /* border: double; */\r\n    width: 92px;\r\n    position: relative;\r\n    left: 58%;\r\n    bottom: 59%;\r\n  }\r\n\r\n  .idtitle {\r\n    font-weight: bold;\r\n  }\r\n\r\n  .contentsize {\r\n    height: 250px;\r\n  }\r\n\r\n  .md-tabs.md-theme-default .md-tabs-navigation {\r\n    background-color: #00BCD4;\r\n  }\r\n\r\n  .suspend {\r\n    background:linear-gradient(60deg,#bdc3c7,#2c3e50) !important;\r\n    color: #FFFFFF !important;\r\n  }\r\n\r\n  .active {\r\n    background: #673AB7 !important;\r\n    color: #FFFFFF !important;\r\n  }\r\n\r\n  .remove {\r\n    background: linear-gradient(60deg,#FDC830,#F37335) !important;\r\n    color: #FFFFFF !important;\r\n  }\r\n\r\n  .close {\r\n    background: linear-gradient(60deg,#6D6027,#D3CBB8) !important;\r\n    color: #FFFFFF !important;\r\n  }\r\n\r\n  .row1 {\r\n    width: 50%;\r\n    position: relative;\r\n    top: 20px;\r\n  }\r\n\r\n  .row2[data-v-3984c662] {\r\n    width: 50%;\r\n    position: relative;\r\n    top: 20px;\r\n  }\r\n\r\n  .column1, .column2, .column3, .column4, .column5 {\r\n    float: left;\r\n    padding: 10px;\r\n    position: relative;\r\n  }\r\n\r\n  .column1 {\r\n    width: 25%;\r\n    top: 21px;\r\n  }\r\n\r\n  .column2 {\r\n    width: 25%;\r\n    top: 21px;\r\n  }\r\n\r\n  .column3 {\r\n    width: 40%;\r\n    top: 21px;\r\n  }\r\n\r\n  .column4 {\r\n    left: 11px;\r\n    width: 15%;\r\n    bottom: 104px;\r\n  }\r\n\r\n  .column5 {\r\n    left: 12px;\r\n    width: 13%;\r\n    bottom: 104px;\r\n  }\r\n\r\n  .tableLayout {\r\n    overflow-y: scroll!important;\r\n    position: relative;\r\n    height: 400px!important;\r\n    width: 80%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n\r\n  .md-card.md-theme-default {\r\n    width: 97%;\r\n  }\r\n\r\n  .md-card.md-cardd.addproof.md-theme-default.md-theme-default {\r\n    width: 34%;\r\n  }\r\n\r\n  .md-card.md-cardd.idproof.md-theme-default.md-theme-default {\r\n    position: relative;\r\n    width: 34%;\r\n    left: 58%;\r\n    top: -115px;\r\n  }\r\n\r\n  .tabWidth {\r\n    height: 318px;\r\n  }\r\n\r\n  .vgt-responsive {\r\n    width: 100%;\r\n    overflow-y: scroll!important;\r\n    position: relative;\r\n    height: 450px!important;\r\n  }\r\n\r\n  .tabFrom, .tabTo, .tabTime, .tabValue {\r\n    font-weight: 400;\r\n    position: relative;\r\n    color: #ff9800 !important;\r\n  }\r\n\r\n  .tabFrom {\r\n    left: 11px;\r\n  }\r\n\r\n  .tabValue {\r\n    left: 80%;\r\n  } \r\n\r\n  .tabTo {\r\n    left: 26%;\r\n  } \r\n\r\n  .tabTIme {\r\n    left: 66.5%;\r\n  }\r\n\r\n  .tabHead {\r\n    border: 1px solid #9e9e9e;\r\n    line-height: 2;\r\n    width: 100%;\r\n  }\r\n\r\n  .balance {\r\n    position: relative;\r\n    left: 94px;\r\n  }\r\n\r\n  md-card .md-card-header-blue .card-icon, .md-card .md-card-header-blue .card-text, .md-card .md-card-header-blue:not(.md-card-header-icon):not(.md-card-header-text), .md-card [data-background-color=\"blue\"], .md-card .md-tabs.md-info .md-tabs-navigation {\r\n    background: linear-gradient(60deg, #ff9800, #ff9800);\r\n}\r\n\r\n</style>"]}]}