{"remainingRequest":"d:\\work2\\vue-material-dashboard\\node_modules\\babel-loader\\lib\\index.js!d:\\work2\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!d:\\work2\\vue-material-dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!d:\\work2\\vue-material-dashboard\\src\\pages\\Dashboard\\token.vue?vue&type=script&lang=js&","dependencies":[{"path":"d:\\work2\\vue-material-dashboard\\src\\pages\\Dashboard\\token.vue","mtime":1549448567780},{"path":"d:\\work2\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"d:\\work2\\vue-material-dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"d:\\work2\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"d:\\work2\\vue-material-dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseInt from \"d:\\\\work2\\\\vue-material-dashboard\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _parseFloat from \"d:\\\\work2\\\\vue-material-dashboard\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-float\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios'; //   const params = require('../_helpers/params.js')\n//   const CONFIG = params.params\n\nexport default {\n  data: function data() {\n    return {\n      role: null,\n      ustatus: false,\n      password: null,\n      id: null,\n      makeadminconfirm: false,\n      status: false,\n      accountType: null,\n      name: null,\n      address: null,\n      value: null,\n      total: null,\n      haltdialog: false,\n      Hname: null,\n      token: {\n        id: null,\n        date: null,\n        contractAddress: null,\n        description: null,\n        name: null,\n        symbol: null,\n        totalSupply: null\n      },\n      user: {\n        email: null,\n        password: null,\n        confirmPassword: null,\n        accountType: 'admin'\n      },\n      deleteConfirm: false,\n      create: false,\n      admin: [],\n      deleteId: null,\n      supplyhistory: null,\n      searchUser: null,\n      rows: [],\n      supplyDialog: false,\n      showConfirm: false,\n      supply: null,\n      addts: null,\n      ts: null,\n      icash: null,\n      text: 'Halt',\n      transactName: [],\n      columns: [{\n        label: 'Full Name',\n        field: this.getName\n      }, {\n        label: 'Transaction Date',\n        field: 'timestamp',\n        formatFn: this.formatDate\n      }, {\n        label: 'Sent',\n        field: this.sent\n      }, {\n        label: 'Received',\n        field: this.receive\n      }],\n      columnsAdmin: [{\n        label: 'Full Name',\n        field: this.getAName\n      }, {\n        label: 'Email',\n        field: 'email'\n      }, {\n        label: 'Remove Admin',\n        field: 'remove',\n        type: 'String'\n      }],\n      columnshistory: [{\n        label: 'Date',\n        field: 'date',\n        formatFn: this.formatHDate\n      }, {\n        label: 'Name',\n        field: this.getHname\n      }, {\n        label: 'Value',\n        field: 'value'\n      }],\n      paginationOption: {\n        enabled: true,\n        perPage: 10\n      }\n    };\n  },\n  watch: {\n    supply: function supply() {\n      this.total = +this.token.totalSupply + +this.supply;\n    }\n  },\n  created: function created() {\n    var token = window.localStorage.getItem('token');\n    var app = this;\n    var id = app.$route.params.id;\n    axios.get(\"http://localhost:3201/api/ecash/\" + id, {\n      headers: {\n        'x-access-token': token\n      }\n    }).then(function (res) {\n      app.token.date = res.data.data.date;\n      app.token.contractAddress = res.data.data.contractAddress;\n      app.token.description = res.data.data.description;\n      app.token.name = res.data.data.name;\n      app.token.totalSupply = res.data.data.totalSupply;\n      app.token.symbol = res.data.data.symbol;\n      app.token.id = res.data.data._id;\n    });\n    axios.get(\"http://localhost:3201/api/recentTrans\", {\n      headers: {\n        'x-access-token': token\n      }\n    }).then(function (response) {\n      app.rows = response.data.data;\n    });\n    axios.get(\"http://localhost:3201/api/admin\", {\n      headers: {\n        'x-access-token': token\n      }\n    }).then(function (response) {\n      app.admin = response.data.data;\n    });\n    axios.get(\"http://localhost:3201/api/user\", {\n      headers: {\n        'x-access-token': token\n      }\n    }).then(function (response) {\n      app.supplyUser = response.data.data._id;\n    });\n    axios.get(\"http://localhost:3201/api/supply\", {\n      headers: {\n        'x-access-token': token\n      }\n    }).then(function (response) {\n      app.supplyhistory = response.data.data;\n    });\n  },\n  methods: {\n    closes: function closes() {\n      this.status = false;\n      this.searchUser = null;\n      this.ustatus = false;\n      this.name = null;\n      this.address = null;\n    },\n    closeall: function closeall() {\n      this.create = false;\n      this.status = false;\n      this.searchUser = null;\n      this.ustatus = false;\n    },\n    makeadmin: function makeadmin() {\n      var token = window.localStorage.getItem('token');\n      var app = this;\n      var data = {};\n      data.password = app.password;\n      data.role = 'admin';\n      axios.post(\"http://localhost:3201/api/makeadmin/\" + app.id, data, {\n        headers: {\n          'x-access-token': token\n        }\n      }).then(function (res) {\n        if (res.data.status === 200) {\n          window.location.reload();\n          app.$toasted.show('User changed to Admin', {\n            fullWidth: false,\n            theme: 'bubble',\n            position: 'bottom-right',\n            duration: 10000\n          });\n        } else {\n          app.$toasted.show('Something went wrong', {\n            fullWidth: false,\n            theme: 'bubble',\n            position: 'bottom-right',\n            duration: 10000\n          });\n        }\n      });\n    },\n    searching: function searching() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (res) {\n        var token = window.localStorage.getItem('token');\n        var app = _this;\n        var data = {};\n        data.email = app.searchUser;\n        axios.post(\"http://localhost:3201/api/userSearch\", data, {\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (response) {\n          if (response.data.data) {\n            app.status = true;\n            app.id = response.data.data._id;\n            app.role = response.data.data.role;\n            app.address = response.data.data.address;\n            app.accountType = response.data.data.accountType;\n\n            if (response.data.data.firstName || response.data.data.lastName) {\n              app.name = response.data.data.firstName + ' ' + response.data.data.lastName;\n            } else {\n              app.name = response.data.data.companyName;\n            }\n          } else {\n            app.ustatus = true;\n            app.status = false;\n          }\n        });\n      });\n    },\n    hideCreate: function hideCreate() {\n      this.create = false;\n    },\n    AdminCreater: function AdminCreater() {\n      this.create = true;\n      this.ustatus = false;\n    },\n    change: function change() {\n      if (this.text === 'Halt') {\n        this.text = 'Unhalt';\n        this.haltdialog = false;\n        this.password = null;\n      } else {\n        this.text = 'Halt';\n        this.haltdialog = false;\n        this.password = null;\n      }\n    },\n    sent: function sent(result) {\n      if (result.from !== this.add) {\n        var sep = _parseFloat(Math.round(result.value * 100) / 100).toFixed(2);\n\n        var num = sep.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n        return num;\n      } else {\n        return '-';\n      }\n    },\n    addSupply: function addSupply() {\n      this.supplyDialog = true;\n      this.supply = null, this.total = null;\n    },\n    formatDate: function formatDate(str) {\n      var datastr = this.$moment(_parseInt(str));\n      return datastr.format('DD-MM-YYYY');\n    },\n    formatHDate: function formatHDate(value) {\n      var datastr = this.$moment(value);\n      return datastr.format(\"DD-MM-YYYY, h:mm:ss a\");\n    },\n    receive: function receive(result) {\n      if (this.add === result.from) {\n        var sep = _parseFloat(Math.round(result.value * 100) / 100).toFixed(2);\n\n        var num = sep.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n        return num;\n      } else {\n        return '-';\n      }\n    },\n    hide: function hide() {\n      this.showConfirm = false;\n      this.supply = null, this.total = null;\n    },\n    update: function update() {\n      var self = this;\n      var add = {};\n      add.value = self.addts;\n      add.user = self.supplyUser;\n      add.totalSupply = eval(self.ts) + eval(self.addts);\n      var token = window.localStorage.getItem('token');\n      axios.post(\"http://localhost:3201/api/addSupply/\" + self.icash, add, {\n        headers: {\n          'x-access-token': token\n        }\n      }).then(function (res) {\n        self.showConfirm = false;\n        window.location.reload();\n      });\n    },\n    addcash: function addcash() {\n      var _this2 = this;\n\n      this.$validator.validateAll().then(function (res) {\n        _this2.showConfirm = true;\n        _this2.supplyDialog = false;\n      });\n    },\n    getAName: function getAName(value) {\n      if (value.firstName || value.lastName) {\n        return value.firstName + ' ' + value.lastName;\n      } else {\n        return value.companyName;\n      }\n    },\n    getHname: function getHname(val) {\n      var _this3 = this;\n\n      var token = window.localStorage.getItem('token');\n      axios.get(\"http://localhost:3201/api/user/\" + val.user, {\n        headers: {\n          'x-access-token': token\n        }\n      }).then(function (res) {\n        _this3.Hname = res.data.data.firstName + ' ' + res.data.data.lastName;\n      });\n      return this.Hname;\n    },\n    hideCash: function hideCash() {\n      this.supplyDialog = false;\n      this.supply = null;\n      this.total = null;\n    },\n    pass: function pass(vala, valts, id) {\n      var _this4 = this;\n\n      this.$validator.validateAll().then(function (res) {\n        _this4.addts = vala;\n        _this4.ts = valts;\n        _this4.icash = id;\n        _this4.showConfirm = true;\n        _this4.supplyDialog = false;\n      });\n    },\n    del: function del() {\n      var data = {};\n      var app = this;\n      data.role = 'Company';\n      var token = window.localStorage.getItem('token');\n      axios.post(\"http://localhost:3201/api/changeadmin/\" + app.deleteId, data, {\n        headers: {\n          'x-access-token': token\n        }\n      }).then(function (res) {\n        window.location.reload();\n        app.showConfirm = false;\n        app.$toasted.show('Admin changed', {\n          fullWidth: false,\n          theme: 'bubble',\n          position: 'bottom-right',\n          duration: 10000\n        });\n      });\n    },\n    removeAdmin: function removeAdmin(id) {\n      this.deleteConfirm = true;\n      this.deleteId = id;\n    },\n    getName: function getName(rowObje) {\n      var address;\n\n      if (this.add === rowObje.to) {\n        address = rowObje.from;\n      } else {\n        address = rowObje.to;\n      }\n\n      var user = this.transactName[address];\n\n      if (!user) {\n        return address;\n      } else if (user.accountType !== 'Company') {\n        return user.firstName + ' ' + user.lastName;\n      } else if (user.accountType === 'Company') {\n        return user.companyName;\n      }\n    }\n  }\n};",{"version":3,"sources":["token.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"md-layout\">\r\n      <div class=\"md-layout-item\">\r\n        <md-card>\r\n          <md-card-header data-background-color=\"orange\">\r\n            <h4 class=\"title\">Token Administration</h4>\r\n          </md-card-header>\r\n          <div>\r\n            <md-dialog :md-active.sync=\"supplyDialog\" class=\"dialog\">\r\n              <md-dialog-title class=\"dialogtitle\">INCREASE SUPPLY</md-dialog-title>\r\n              <div class=\"supplyside\">\r\n                <form novalidate @submit.prevent=\"addcash\" >\r\n                  <div class=\"addec\">\r\n                    <md-field >\r\n                      <label for=\"symbol\">Total supply</label>\r\n                      <md-input v-model=\"token.totalSupply\" disabled/>\r\n                    </md-field> \r\n                    <md-field :class=\"{error: errors.has('Supply')}\">\r\n                      <label>Additional Supply</label>\r\n                      <md-input v-validate=\"'required'\" name=\"Supply\" id=\"Supply\"\r\n                        v-model=\"supply\" required ></md-input>\r\n                      <span class=\"error\" v-if=\"errors.has('Supply')\">{{errors.first('Supply')}}</span>\r\n                    </md-field>\r\n                    <md-field>\r\n                      <label for=\"symbol\">New total supply</label>\r\n                      <md-input v-model=\"total\" disabled/>\r\n                    </md-field> \r\n                  </div>\r\n                  <md-dialog-actions>\r\n                    <md-button class=\"md-success\" @click=\"pass(supply,token.totalSupply,token.id)\" >Add supply</md-button>&emsp;&emsp;&emsp;&emsp;\r\n                    <md-button class=\" md-danger\" @click=\"hideCash\">Close</md-button>\r\n                  </md-dialog-actions>\r\n                </form>\r\n              </div>\r\n              <div class=\"history\">\r\n                <h4 class=\"tableheader\">Total Supply Addition History</h4>\r\n                <vue-good-table \r\n                  :columns=\"columnshistory\" \r\n                  :rows=\"supplyhistory\">\r\n                </vue-good-table>\r\n              </div>\r\n            </md-dialog>\r\n            <md-dialog :md-active.sync=\"showConfirm\" class=\"confirmSupply\">\r\n              <md-dialog-title class=\"confirmation\">Confirmation</md-dialog-title>\r\n              <form novalidate @submit.prevent=\"update\">\r\n                <div>\r\n                  <label for=\"symbol\" class=\"question\">Do you want to add supply?</label>\r\n                </div>\r\n                <md-dialog-actions>\r\n                  <md-button class=\" actionbtn md-success\" type=\"submit\">Confirm</md-button> &emsp;&emsp;\r\n                  <md-button class=\"md-danger actionbtn\" @click=\"hide\">cancel</md-button>\r\n                </md-dialog-actions>\r\n              </form>\r\n            </md-dialog>\r\n          </div>\r\n          <div class=\"tokenDetails\">\r\n            <span class=\"name\"><strong> Name :</strong> {{token.name}}</span>\r\n            <hr style=\"border-top: dashed 1px;\">\r\n            <span class=\"name\"><strong>Symbol:</strong> {{token.symbol}}</span>\r\n            <hr style=\"border-top: dashed 1px;\">\r\n            <span class=\"name\"><strong> Address :</strong> {{token.contractAddress}}</span>\r\n            <hr style=\"border-top: dashed 1px;\">\r\n            <span class=\"name\"><strong> Supply : </strong>{{token.totalSupply}}</span>\r\n            <hr style=\"border-top: dashed 1px;\">\r\n            <span class=\"name\"><strong>Description :</strong> {{token.description}}</span>\r\n          </div>\r\n          <div class=\"table\">\r\n            <vue-good-table \r\n              :columns=\"columnsAdmin\" \r\n              :rows=\"admin\"\r\n            >\r\n              <template slot=\"table-row\" slot-scope=\"props\">\r\n                <span v-if=\"props.column.field == 'remove'\" @click=\"removeAdmin(props.row._id)\"> \r\n                  <md-icon className=\"material-icons\" class=\"close\" >close</md-icon>\r\n                </span>\r\n                <span v-else>\r\n                  {{props.formattedRow[props.column.field]}}\r\n                </span>\r\n              </template>\r\n            </vue-good-table>&emsp;\r\n            <md-button @click=\"addSupply\" class=\"add\">Add supply</md-button> &emsp;\r\n            <md-button class=\"halt md-danger\" @click=\"haltdialog=true\">{{text}}</md-button> &emsp;\r\n            <md-button class=\"addAdmin\" @click=\"AdminCreater\">Add Admin</md-button>\r\n          </div>\r\n          <md-dialog :md-active.sync=\"haltdialog\" class=\"haltq\">\r\n            <form novalidate @submit.prevent=\"change\">\r\n              <div class=\"confirmhalt\"> <br>\r\n                <label for=\"symbol\" class=\"question\">Enter password to halt <strong>{{token.name}}</strong></label>\r\n                <md-field :class=\"{error: errors.has('password')}\">\r\n                  <label >Password</label>\r\n                  <md-input required v-validate=\"'required'\" type=\"password\" name=\"password\" id=\"password\"\r\n                    v-model=\"password\"></md-input>\r\n                  <span class=\"error\" v-if=\"errors.has('password')\">{{errors.first('password')}}</span>\r\n                </md-field> <br>\r\n              </div>\r\n              <md-dialog-actions>\r\n                <md-button class=\"md-success actionbtn \" type=\"submit\">Confirm</md-button> &emsp;&emsp;\r\n                <md-button class=\"md-danger actionbtn\" @click=\"haltdialog=false, password = null\">cancel</md-button>\r\n              </md-dialog-actions>\r\n            </form>\r\n          </md-dialog>\r\n          <md-dialog :md-active.sync=\"deleteConfirm\" >\r\n            <form novalidate @submit.prevent=\"del\">\r\n              <div class=\"delad\"> <br>\r\n                <label for=\"symbol\">Do you want to remove admin?</label> <br><br><br>\r\n              </div>\r\n              <md-dialog-actions>\r\n                <md-button class=\"md-info actionbtn md-success\" type=\"submit\">Confirm</md-button> &emsp;&emsp;\r\n                <md-button class=\"md-danger actionbtn\" @click=\"deleteConfirm=false\">cancel</md-button>\r\n              </md-dialog-actions>\r\n            </form>\r\n          </md-dialog>\r\n          <div>\r\n            <md-dialog :md-active.sync=\"create\" class=\"search\">\r\n              <md-dialog-title>Add Admin\r\n                <div class=\"x\" @click=\"closeall\">X</div>\r\n              </md-dialog-title>\r\n              <form novalidate @submit.prevent=\"searching\" >\r\n                <div class=\"addec\">\r\n                  <md-field :class=\"{error: errors.has('searchUser')}\">\r\n                    <label>Enter Email Id to Search!</label>\r\n                    <md-input v-validate=\"'required|email'\" name=\"searchUser\" id=\"searchUser\"\r\n                      v-model=\"searchUser\" required ></md-input> <br>\r\n                    <div class=\"error\" v-if=\"errors.has('searchUser')\">{{errors.first('searchUser')}}</div>\r\n                  </md-field>\r\n                </div>\r\n                <md-dialog-actions>\r\n                  <md-button class=\"md-info actionbtn searchbtn\" type=\"submit\">Search</md-button>\r\n                </md-dialog-actions>\r\n              </form> <br>\r\n              <div class=\"profile\" v-if=\"status\">\r\n                <md-field>\r\n                  <label>Wallet Address</label>\r\n                  <md-input v-model=\"address\" readonly></md-input>\r\n                </md-field>\r\n                <md-field>\r\n                  <label>Name</label>\r\n                  <md-input v-model=\"name\" readonly></md-input>\r\n                </md-field>\r\n                <md-field v-if=\"role!='admin'\">\r\n                  <label >Account Type</label>\r\n                  <md-input v-model=\"accountType\" readonly></md-input>\r\n                </md-field>\r\n                <div class=\"alert alert-warning\" v-else>\r\n                  <strong>Info!</strong> This user is already an Admin\r\n                </div>\r\n                <md-button class=\" actionbtn md-danger\" @click=\"closes\" type=\"submit\">cancel</md-button>\r\n                <md-button class=\" actionbtn adminbtn md-success\" v-if=\"role!='admin'\" @click=\"makeadminconfirm=true,create=false\" type=\"submit\">Make admin</md-button>\r\n              </div>\r\n              <div class=\"alert alert-danger al\" v-if=\"ustatus &&!status \">\r\n                <strong>Warning!</strong> User not found.\r\n              </div>\r\n            </md-dialog>\r\n            <md-dialog :md-active.sync=\"makeadminconfirm\" class=\"finalpass\" >\r\n              <md-dialog-title class=\"confirmation\">Confirmation</md-dialog-title>\r\n              <form novalidate @submit.prevent=\"makeadmin\">\r\n                <div class=\"addpass\">\r\n                  <label for=\"symbol\" >Enter password to make <strong> {{name}}</strong> an admin?</label>\r\n                </div>\r\n                <div class=\"modelpass\">\r\n                  <md-field :class=\"{error: errors.has('password')}\">\r\n                    <label >Password</label>\r\n                    <md-input required v-validate=\"'required'\" type=\"password\" name=\"password\" id=\"password\"\r\n                      v-model=\"password\"></md-input>\r\n                    <span class=\"error\" v-if=\"errors.has('password')\">{{errors.first('password')}}</span>\r\n                  </md-field>\r\n                </div>\r\n                <md-dialog-actions>\r\n                  <md-button class=\" md-success actionbtn\" type=\"submit\">Confirm</md-button> &emsp;\r\n                  <md-button class=\" md-danger actionbtn\" @click=\"makeadminconfirm=false,status =false,searchUser=null,ustatus=false\">cancel</md-button>\r\n                </md-dialog-actions>\r\n              </form>\r\n            </md-dialog> \r\n          </div>\r\n        </md-card>\r\n        <md-card>\r\n          <md-card-header data-background-color=\"orange\">\r\n            <h4 class=\"title\">Recent Transactions</h4>\r\n          </md-card-header><br>\r\n          <vue-good-table \r\n            :columns=\"columns\" \r\n            :rows=\"rows\" \r\n            :search-options=\"{\r\n              enabled: true, \r\n              placeholder: 'Search'}\"\r\n            :pagination-options=\"paginationOption\">\r\n          </vue-good-table>\r\n        </md-card> \r\n      </div> \r\n    </div>\r\n  </div> \r\n</template>\r\n\r\n<script>\r\n  import axios from 'axios'\r\n//   const params = require('../_helpers/params.js')\r\n//   const CONFIG = params.params\r\n\r\n  export default {\r\n    data () { \r\n        return {\r\n            role: null,\r\n            ustatus: false,\r\n            password: null,\r\n            id: null,\r\n            makeadminconfirm: false,\r\n            status: false,\r\n            accountType: null,\r\n            name: null,\r\n            address: null,\r\n            value: null,\r\n            total: null,\r\n            haltdialog: false,\r\n            Hname: null,\r\n            token: {\r\n                id: null,\r\n                date: null,\r\n                contractAddress: null,\r\n                description: null,\r\n                name: null,\r\n                symbol: null,\r\n                totalSupply: null\r\n            },        \r\n            user: {\r\n                email: null,\r\n                password: null,\r\n                confirmPassword: null,\r\n                accountType: 'admin'\r\n            },\r\n            deleteConfirm: false,\r\n            create: false,\r\n            admin: [],\r\n            deleteId: null,\r\n            supplyhistory: null,\r\n            searchUser: null,\r\n            rows: [],\r\n            supplyDialog: false,\r\n            showConfirm: false,\r\n            supply: null,\r\n            addts: null,\r\n            ts: null,\r\n            icash: null,\r\n            text: 'Halt',\r\n            transactName:[],\r\n            columns: [\r\n                {label: 'Full Name', field: this.getName},\r\n                {label: 'Transaction Date',field: 'timestamp', formatFn:this.formatDate},\r\n                {label: 'Sent', field: this.sent },\r\n                {label: 'Received', field: this.receive}\r\n              ],\r\n            columnsAdmin: [\r\n                {label: 'Full Name', field: this.getAName},\r\n                {label: 'Email', field: 'email'},\r\n                {label: 'Remove Admin', field:'remove', type: 'String'}  \r\n              ],\r\n            columnshistory: [\r\n                {label: 'Date', field: 'date', formatFn: this.formatHDate},\r\n                {label: 'Name', field: this.getHname},\r\n                {label: 'Value', field: 'value'}\r\n              ],\r\n            paginationOption: {\r\n                  enabled: true,\r\n                  perPage: 10\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n      supply() {\r\n        this.total = +this.token.totalSupply + +this.supply\r\n      }\r\n    },\r\n    created () {\r\n      const token = window.localStorage.getItem('token')\r\n      var app=this\r\n      var id = app.$route.params.id\r\n\r\n      axios.get(\"http://localhost:3201/api/ecash/\"+id, { headers: { 'x-access-token': token } })\r\n        .then(res => {\r\n          app.token.date = res.data.data.date\r\n          app.token.contractAddress = res.data.data.contractAddress\r\n          app.token.description = res.data.data.description\r\n          app.token.name = res.data.data.name\r\n          app.token.totalSupply = res.data.data.totalSupply\r\n          app.token.symbol = res.data.data.symbol\r\n          app.token.id = res.data.data._id\r\n        })\r\n      axios.get(\"http://localhost:3201/api/recentTrans\",{headers:{'x-access-token': token}})\r\n        .then(response => {\r\n          app.rows = response.data.data\r\n        })\r\n      axios.get(\"http://localhost:3201/api/admin\",{headers:{'x-access-token': token}})\r\n        .then(response => {\r\n          app.admin = response.data.data\r\n        })\r\n      axios.get(\"http://localhost:3201/api/user\",{headers:{'x-access-token': token}})\r\n        .then(response => {\r\n          app.supplyUser = response.data.data._id\r\n        }) \r\n      axios.get(\"http://localhost:3201/api/supply\",{headers:{'x-access-token': token}})\r\n        .then(response => {\r\n          app.supplyhistory = response.data.data\r\n        }) \r\n    },\r\n    methods: {\r\n      closes () {\r\n        this.status = false\r\n        this.searchUser = null\r\n        this.ustatus = false\r\n        this.name = null\r\n        this.address = null\r\n      },\r\n      closeall () {\r\n        this.create = false\r\n        this.status = false\r\n        this.searchUser = null\r\n        this.ustatus = false\r\n      },\r\n      makeadmin () {\r\n        const token = window.localStorage.getItem('token')\r\n        var app=this\r\n        var data = {}\r\n        data.password = app.password\r\n        data.role = 'admin'\r\n\r\n        axios.post(\"http://localhost:3201/api/makeadmin/\"+app.id,data,{headers:{'x-access-token': token}})\r\n          .then(res => {\r\n            if(res.data.status === 200) {\r\n              window.location.reload()\r\n              app.$toasted.show('User changed to Admin', { \r\n                  fullWidth: false,\r\n                  theme: 'bubble',\r\n                  position: 'bottom-right',\r\n                  duration: 10000\r\n              })\r\n            } else {\r\n              app.$toasted.show('Something went wrong', { \r\n                  fullWidth: false,\r\n                  theme: 'bubble',\r\n                  position: 'bottom-right',\r\n                  duration: 10000\r\n              })\r\n            }\r\n        })\r\n      },\r\n      searching () {\r\n        this.$validator.validateAll()\r\n        .then(res =>{\r\n          const token = window.localStorage.getItem('token')\r\n          var app=this\r\n          var data = {}\r\n          data.email = app.searchUser\r\n\r\n            axios.post(\"http://localhost:3201/api/userSearch\",data,{headers:{'x-access-token': token}})\r\n              .then(response => {\r\n                if(response.data.data) {\r\n                  app.status = true\r\n                  app.id = response.data.data._id\r\n                  app.role = response.data.data.role\r\n                  app.address = response.data.data.address\r\n                  app.accountType = response.data.data.accountType\r\n                  if((response.data.data.firstName)||(response.data.data.lastName)) {\r\n                    app.name = response.data.data.firstName + ' ' + response.data.data.lastName\r\n                  } else {\r\n                    app.name = response.data.data.companyName\r\n                  }\r\n                } else {\r\n                  app.ustatus = true\r\n                  app.status = false\r\n                }\r\n            }) \r\n        })\r\n      },\r\n      hideCreate () {\r\n        this.create = false\r\n      },\r\n      AdminCreater () {\r\n        this.create = true\r\n        this.ustatus = false\r\n      },\r\n      change () {\r\n        if (this.text === 'Halt') {\r\n          this.text = 'Unhalt'\r\n          this.haltdialog = false\r\n          this.password = null\r\n        } else {\r\n          this.text = 'Halt'\r\n          this.haltdialog = false\r\n          this.password = null\r\n        }\r\n      },\r\n      sent (result) {\r\n        if (result.from !== this.add) {\r\n          var sep = parseFloat(Math.round(result.value * 100) / 100).toFixed(2)\r\n          var num = sep.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n          return num\r\n        } else {\r\n          return '-'\r\n        }\r\n      },\r\n      addSupply () {\r\n        this.supplyDialog = true\r\n        this.supply = null,\r\n        this.total = null\r\n      },\r\n      formatDate (str) {\r\n        let datastr = this.$moment(parseInt(str))\r\n        return datastr.format('DD-MM-YYYY')\r\n      },\r\n      formatHDate(value) {\r\n        let datastr = this.$moment(value);\r\n        return datastr.format(\"DD-MM-YYYY, h:mm:ss a\")\r\n      },\r\n      receive (result) {\r\n        if (this.add === result.from) {\r\n          var sep = parseFloat(Math.round(result.value * 100) / 100).toFixed(2)\r\n          var num = sep.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n          return num\r\n        } else {\r\n          return '-'\r\n        }\r\n      },\r\n      hide () {\r\n        this.showConfirm = false\r\n        this.supply = null,\r\n        this.total = null \r\n      },\r\n      update () {\r\n        let self = this\r\n        var add = {}\r\n        add.value = self.addts\r\n        add.user = self.supplyUser\r\n        add.totalSupply = eval(self.ts) + eval(self.addts)\r\n        var token = window.localStorage.getItem('token')\r\n\r\n        axios.post(\"http://localhost:3201/api/addSupply/\" + self.icash, add, { headers: { 'x-access-token': token } })\r\n          .then(res => {\r\n            self.showConfirm = false\r\n            window.location.reload()\r\n        })\r\n      },\r\n      addcash () {\r\n        this.$validator.validateAll()\r\n        .then(res => {\r\n          this.showConfirm = true\r\n          this.supplyDialog = false\r\n        })\r\n      },\r\n      getAName (value) {\r\n        if ((value.firstName)||(value.lastName)) {\r\n          return value.firstName + ' ' + value.lastName\r\n        } else {\r\n          return value.companyName\r\n        }\r\n      },\r\n      getHname (val) {\r\n        var token = window.localStorage.getItem('token')\r\n        axios.get(\"http://localhost:3201/api/user/\" + val.user, { headers: { 'x-access-token': token } })\r\n          .then(res => {\r\n            this.Hname = res.data.data.firstName + ' ' + res.data.data.lastName\r\n          })\r\n          return this.Hname\r\n      },\r\n      hideCash () {\r\n        this.supplyDialog = false\r\n        this.supply = null\r\n        this.total = null\r\n      },\r\n      pass (vala, valts, id) {\r\n        this.$validator.validateAll()\r\n        .then(res => {\r\n          this.addts = vala\r\n          this.ts = valts\r\n          this.icash = id\r\n          this.showConfirm = true\r\n          this.supplyDialog = false\r\n        })\r\n      },\r\n      del () {\r\n        var data = {}\r\n        var app = this\r\n        data.role = 'Company'\r\n        var token = window.localStorage.getItem('token')\r\n        axios.post(\"http://localhost:3201/api/changeadmin/\"+app.deleteId, data, { headers: { 'x-access-token': token } })\r\n          .then(res => {\r\n            window.location.reload()\r\n            app.showConfirm = false\r\n              app.$toasted.show('Admin changed', {\r\n              fullWidth: false,\r\n              theme: 'bubble',\r\n              position: 'bottom-right',\r\n              duration: 10000\r\n              })\r\n          })\r\n      },\r\n      removeAdmin (id) {\r\n        this.deleteConfirm = true\r\n        this.deleteId = id\r\n      },\r\n      getName (rowObje) {\r\n        let address\r\n          if (this.add === rowObje.to) {\r\n            address = rowObje.from\r\n          } else {\r\n            address = rowObje.to\r\n          }\r\n        let user = this.transactName[address]\r\n          if (!user) {\r\n            return address\r\n          } else if ((user.accountType !== 'Company')) {\r\n            return (user.firstName + ' ' + user.lastName)\r\n          } else if (user.accountType === 'Company') {\r\n            return user.companyName\r\n          }\r\n      },\r\n    }\r\n }\r\n</script>\r\n\r\n<style scoped>\r\n  .delad {\r\n    padding-left: 4%;\r\n    padding-right: 4%;\r\n    font-size: 20px;\r\n  }\r\n  .confirmSupply {\r\n    width: 37%;\r\n  }\r\n  .haltq {\r\n    width: 40%;\r\n  }\r\n  .confirmhalt {\r\n    padding-left: 6%; \r\n  }\r\n\r\n  .confirmation {\r\n    font-size: 25px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    font-weight: 100;\r\n    font-family: sans-serif;\r\n  }\r\n  .x {\r\n    cursor: pointer;\r\n    float: right;\r\n    width: 4%;\r\n    padding-left: 1.1%;\r\n    background: crimson;\r\n    border-radius: 5px;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 800;\r\n  }\r\n  .al {\r\n    width: 75%;\r\n    margin-left: 14%;\r\n  }\r\n  .modelpass {\r\n    padding-left: 4%;\r\n  }\r\n  .addpass {\r\n    padding-left: 4%;\r\n    font-size: 17px;\r\n  }\r\n  .finalpass {\r\n    width: 38%;\r\n  }\r\n  .closesearch {\r\n  background: red !important;\r\n  }\r\n  .adminbtn {\r\n    float: left;\r\n    margin-left: 30% !important;\r\n    margin-right: 13% !important;\r\n  }\r\n  .profile {\r\n    padding-left: 25%;\r\n    padding-right: 25%;\r\n  }\r\n\r\n  .searchbtn {\r\n    border-radius: 50px;\r\n    width: 20%;\r\n    margin-right: 45% !important;\r\n    height: 37px;\r\n  }\r\n  .closebtn {\r\n    background: red !important;\r\n  }\r\n  .search {\r\n    width: 50%;\r\n    height: 100%;\r\n  }\r\n  .question {\r\n    font-size: 19px;\r\n    padding-left: 5%;\r\n  }\r\n  .dialogtitle {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    font-weight: bold;\r\n    font-size: 22px;\r\n  }\r\n  .history {\r\n    width: 53%;\r\n    position:absolute;\r\n    margin-left: 45%;\r\n    margin-top: 14%;\r\n  }\r\n  .tableheader {\r\n    color: white;\r\n    background: linear-gradient(60deg, #000046, #1CB5E0) !important;\r\n    box-shadow: 0 12px 20px -10px rgba(255, 152, 0, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(255, 152, 0, 0.2) !important;\r\n    padding-top: 3%;\r\n    padding-left: 3%;\r\n    padding-bottom: 3%;\r\n  }\r\n  .supplyside {\r\n  /* display: inline-block;\r\n  width: 40%; */\r\n    margin-top: 4%;\r\n    margin-left: 4%;\r\n    margin-bottom: 4%;\r\n    height: fit-content;\r\n    width: 40%;\r\n    display: inline-block;\r\n    border-right: 4px solid cadetblue;\r\n  }\r\n  .dialog {\r\n    width: 55%;\r\n    height: fit-content;\r\n  }\r\n  .addec {\r\n    padding-left: 4%;\r\n    padding-right: 4%;\r\n    /* width: 46%; */\r\n  }\r\n  .textbtn {\r\n    background: green !important;\r\n  }\r\n  .add {\r\n    margin-right: 3%;\r\n    border-radius: 50px;\r\n    background: mediumvioletred!important;\r\n  }\r\n  .vgt-wrap{\r\n    position: relative;\r\n    margin-left: 1.5%;\r\n    margin-right: 1.5%;\r\n  }\r\n  .table {\r\n    float: right;\r\n    margin-right: 2%;\r\n    width: 53%;\r\n    margin-top: 4%;\r\n  }\r\n  .buttons {\r\n    margin-right: 1%;\r\n    float: right;\r\n    margin-top: -24%;\r\n  }\r\n\r\n  .addSupply {\r\n    margin-top: 0%;\r\n    border-radius: 50px;\r\n  }\r\n  .addAdmin {\r\n    border-radius: 50px;\r\n    margin-top:2%;\r\n    background: darkslategrey!important;\r\n  }\r\n  .removeAdmin {\r\n    border-radius: 50px;\r\n  }\r\n  .halt {\r\n    border-radius: 50px;\r\n  }\r\n  .tokenDetails {\r\n    margin-top: 4%;\r\n    margin-left: 4%;\r\n    margin-bottom: 4%;\r\n    width: 40%;\r\n    display: inline-block;\r\n    border-right: 4px solid cadetblue;\r\n    /* border-radius: 5px; */\r\n  }\r\n  .close {\r\n    color: red !important;\r\n    font-weight: bolder;\r\n    cursor: pointer;\r\n  }\r\n  .name {\r\n    font-size: 15px;\r\n  }\r\n\r\n</style>"],"sourceRoot":"src/pages/Dashboard"}]}