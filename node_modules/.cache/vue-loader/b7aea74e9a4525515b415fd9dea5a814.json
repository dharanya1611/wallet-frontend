{"remainingRequest":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\src\\pages\\Dashboard\\card.vue?vue&type=style&index=0&id=694d2062&lang=css&scoped=true&","dependencies":[{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\src\\pages\\Dashboard\\card.vue","mtime":1549429984558},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.md-card .md-card-actions{\r\n  border: 0;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n}\r\n",{"version":3,"sources":["card.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8QA;AACA;AACA;AACA;AACA","file":"card.vue","sourceRoot":"src/pages/Dashboard","sourcesContent":["<template>\r\n  <div class=\"md-layout\">\r\n    <div class=\"md-layout-item\">\r\n      <md-card>\r\n        <md-card-header class=\"md-card-header-icon md-card-header-green\">\r\n          <div class=\"card-icon\">\r\n            <md-icon>assignment</md-icon>\r\n          </div>\r\n          <h4 class=\"title\">Paginated Tables</h4>\r\n        </md-card-header>\r\n        <md-card-content>\r\n          <md-table\r\n            :value=\"queriedData\"\r\n            :md-sort.sync=\"currentSort\"\r\n            :md-sort-order.sync=\"currentSortOrder\"\r\n            :md-sort-fn=\"customSort\"\r\n            class=\"paginated-table table-striped table-hover\"\r\n          >\r\n            <md-table-toolbar>\r\n              <md-field>\r\n                <label for=\"pages\">Per page</label>\r\n                <md-select v-model=\"pagination.perPage\" name=\"pages\">\r\n                  <md-option\r\n                    v-for=\"item in pagination.perPageOptions\"\r\n                    :key=\"item\"\r\n                    :label=\"item\"\r\n                    :value=\"item\"\r\n                  >\r\n                    {{ item }}\r\n                  </md-option>\r\n                </md-select>\r\n              </md-field>\r\n\r\n              <md-field>\r\n                <md-input\r\n                  type=\"search\"\r\n                  class=\"mb-3\"\r\n                  clearable\r\n                  style=\"width: 200px\"\r\n                  placeholder=\"Search records\"\r\n                  v-model=\"searchQuery\"\r\n                >\r\n                </md-input>\r\n              </md-field>\r\n            </md-table-toolbar>\r\n\r\n            <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\r\n              <md-table-cell md-label=\"Full Name\" md-sort-by=\"companyName\">\r\n                {{ item.user.firstName }}\r\n              </md-table-cell>\r\n              <md-table-cell md-label=\"Email\" md-sort-by=\"email\">{{\r\n                item.user.email\r\n              }}</md-table-cell>\r\n              <md-table-cell md-label=\"Card Number\">{{ item.cardNumber }}</md-table-cell>\r\n              <md-table-cell md-label=\"Print Status\">{{ item.status }}</md-table-cell>\r\n              <md-table-cell md-label=\"Actions\">\r\n                <md-button\r\n                  class=\"md-just-icon md-info md-simple\"\r\n                  @click.native=\"handleLike(item)\"\r\n                >\r\n                  <md-icon>favorite</md-icon>\r\n                </md-button>\r\n                <md-button\r\n                  class=\"md-just-icon md-warning md-simple\"\r\n                  @click.native=\"handleEdit(item)\"\r\n                >\r\n                  <md-icon>dvr</md-icon>\r\n                </md-button>\r\n                <md-button\r\n                  class=\"md-just-icon md-danger md-simple\"\r\n                  @click.native=\"handleDelete(item)\"\r\n                >\r\n                  <md-icon>close</md-icon>\r\n                </md-button>\r\n              </md-table-cell>\r\n            </md-table-row>\r\n          </md-table>\r\n          <!-- <div class=\"footer-table md-table\">\r\n            <table>\r\n              <tfoot>\r\n                <tr>\r\n                  <th\r\n                    v-for=\"item in footerTable\"\r\n                    :key=\"item.name\"\r\n                    class=\"md-table-head\"\r\n                  >\r\n                    <div class=\"md-table-head-container md-ripple md-disabled\">\r\n                      <div class=\"md-table-head-label\">\r\n                        {{ item }}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </div> -->\r\n        </md-card-content>\r\n        <md-card-actions md-alignment=\"space-between\">\r\n          <div class=\"\">\r\n            <p class=\"card-category\">\r\n              Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\r\n            </p>\r\n          </div>\r\n          <pagination\r\n            class=\"pagination-no-border pagination-success\"\r\n            v-model=\"pagination.currentPage\"\r\n            :per-page=\"pagination.perPage\"\r\n            :total=\"total\"\r\n          >\r\n          </pagination>\r\n        </md-card-actions>\r\n      </md-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Pagination } from \"@/components\";\r\nimport Fuse from \"fuse.js\";\r\nimport swal from \"sweetalert2\";\r\nimport axios from 'axios';\r\n// const params = require('../_helpers/params.js');\r\n// const CONFIG = params.params; \r\n\r\nexport default {\r\n  components: {\r\n    Pagination\r\n  },\r\n  created () {\r\n            const token = window.localStorage.getItem('token');        \r\n            let user = JSON.parse(localStorage.getItem('user'));\r\n            var app=this;\r\n                axios.get(\"http://localhost:3201/api/cardList\",{headers:{'x-access-token': token}})\r\n                    .then((response) => {\r\n                console.log(response.data)             \r\n                app.tableData = response.data.data;               \r\n            })\r\n            .catch((error) => {\r\n                console.log(\"error\");\r\n            });\r\n       },\r\n\r\n  computed: {\r\n    /***\r\n     * Returns a page from the searched data or the whole data. Search is performed in the watch section below\r\n     */\r\n    queriedData() {\r\n      let result = this.tableData;\r\n      if (this.searchedData.length > 0) {\r\n        result = this.searchedData;\r\n      }\r\n      return result.slice(this.from, this.to);\r\n    },\r\n    to() {\r\n      let highBound = this.from + this.pagination.perPage;\r\n      if (this.total < highBound) {\r\n        highBound = this.total;\r\n      }\r\n      return highBound;\r\n    },\r\n    from() {\r\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\r\n    },\r\n    total() {\r\n      return this.searchedData.length > 0\r\n        ? this.searchedData.length\r\n        : this.tableData.length;\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currentSort: \"name\",\r\n      currentSortOrder: \"asc\",\r\n      pagination: {\r\n        perPage: 5,\r\n        currentPage: 1,\r\n        perPageOptions: [5, 10, 25, 50],\r\n        total: 0\r\n      },\r\n    //   footerTable: [\"Name\", \"Date\", \"Received\", \"Sent\", \"Actions\"],\r\n      searchQuery: \"\",\r\n      propsToSearch: [\"name\", \"email\"],\r\n      tableData: [],\r\n       transactName:[],\r\n      searchedData: [],\r\n      fuseSearch: null\r\n    };\r\n  },\r\n  methods: {\r\n    customSort(value) {\r\n      return value.sort((a, b) => {\r\n        const sortBy = this.currentSort;\r\n        if (this.currentSortOrder === \"desc\") {\r\n          return a[sortBy].localeCompare(b[sortBy]);\r\n        }\r\n        return b[sortBy].localeCompare(a[sortBy]);\r\n      });\r\n    },\r\n    handleLike(item) {\r\n      swal({\r\n        title: `You liked ${item.name}`,\r\n        buttonsStyling: false,\r\n        type: \"success\",\r\n        confirmButtonClass: \"md-button md-success\"\r\n      });\r\n    },\r\n    handleEdit(item) {\r\n      swal({\r\n        title: `You want to edit ${item.name}`,\r\n        buttonsStyling: false,\r\n        confirmButtonClass: \"md-button md-info\"\r\n      });\r\n    },\r\n    handleDelete(item) {\r\n      swal({\r\n        title: \"Are you sure?\",\r\n        text: `You won't be able to revert this!`,\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonClass: \"md-button md-success btn-fill\",\r\n        cancelButtonClass: \"md-button md-danger btn-fill\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n        buttonsStyling: false\r\n      }).then(result => {\r\n        if (result.value) {\r\n          this.deleteRow(item);\r\n          swal({\r\n            title: \"Deleted!\",\r\n            text: `You deleted ${item.name}`,\r\n            type: \"success\",\r\n            confirmButtonClass: \"md-button md-success btn-fill\",\r\n            buttonsStyling: false\r\n          });\r\n        }\r\n      });\r\n    },\r\n    deleteRow(item) {\r\n      let indexToDelete = this.tableData.findIndex(\r\n        tableRow => tableRow.id === item.id\r\n      );\r\n      if (indexToDelete >= 0) {\r\n        this.tableData.splice(indexToDelete, 1);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // Fuse search initialization.\r\n    this.fuseSearch = new Fuse(this.tableData, {\r\n      keys: [\"name\", \"email\"],\r\n      threshold: 0.3\r\n    });\r\n  },\r\n  watch: {\r\n    /**\r\n     * Searches through the table data by a given query.\r\n     * NOTE: If you have a lot of data, it's recommended to do the search on the Server Side and only display the results here.\r\n     * @param value of the query\r\n     */\r\n    searchQuery(value) {\r\n      let result = this.tableData;\r\n      if (value !== \"\") {\r\n        result = this.fuseSearch.search(this.searchQuery);\r\n      }\r\n      this.searchedData = result;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n.md-card .md-card-actions{\r\n  border: 0;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n}\r\n</style>\r\n"]}]}