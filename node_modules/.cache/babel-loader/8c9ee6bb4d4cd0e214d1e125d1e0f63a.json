{"remainingRequest":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\src\\pages\\Dashboard\\card.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\src\\pages\\Dashboard\\card.vue","mtime":1549429984558},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Pagination } from \"@/components\";\nimport Fuse from \"fuse.js\";\nimport swal from \"sweetalert2\";\nimport axios from 'axios'; // const params = require('../_helpers/params.js');\n// const CONFIG = params.params; \n\nexport default {\n  components: {\n    Pagination: Pagination\n  },\n  created: function created() {\n    var token = window.localStorage.getItem('token');\n    var user = JSON.parse(localStorage.getItem('user'));\n    var app = this;\n    axios.get(\"http://localhost:3201/api/cardList\", {\n      headers: {\n        'x-access-token': token\n      }\n    }).then(function (response) {\n      console.log(response.data);\n      app.tableData = response.data.data;\n    }).catch(function (error) {\n      console.log(\"error\");\n    });\n  },\n  computed: {\n    /***\r\n     * Returns a page from the searched data or the whole data. Search is performed in the watch section below\r\n     */\n    queriedData: function queriedData() {\n      var result = this.tableData;\n\n      if (this.searchedData.length > 0) {\n        result = this.searchedData;\n      }\n\n      return result.slice(this.from, this.to);\n    },\n    to: function to() {\n      var highBound = this.from + this.pagination.perPage;\n\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n\n      return highBound;\n    },\n    from: function from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total: function total() {\n      return this.searchedData.length > 0 ? this.searchedData.length : this.tableData.length;\n    }\n  },\n  data: function data() {\n    return {\n      currentSort: \"name\",\n      currentSortOrder: \"asc\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      //   footerTable: [\"Name\", \"Date\", \"Received\", \"Sent\", \"Actions\"],\n      searchQuery: \"\",\n      propsToSearch: [\"name\", \"email\"],\n      tableData: [],\n      transactName: [],\n      searchedData: [],\n      fuseSearch: null\n    };\n  },\n  methods: {\n    customSort: function customSort(value) {\n      var _this = this;\n\n      return value.sort(function (a, b) {\n        var sortBy = _this.currentSort;\n\n        if (_this.currentSortOrder === \"desc\") {\n          return a[sortBy].localeCompare(b[sortBy]);\n        }\n\n        return b[sortBy].localeCompare(a[sortBy]);\n      });\n    },\n    handleLike: function handleLike(item) {\n      swal({\n        title: \"You liked \".concat(item.name),\n        buttonsStyling: false,\n        type: \"success\",\n        confirmButtonClass: \"md-button md-success\"\n      });\n    },\n    handleEdit: function handleEdit(item) {\n      swal({\n        title: \"You want to edit \".concat(item.name),\n        buttonsStyling: false,\n        confirmButtonClass: \"md-button md-info\"\n      });\n    },\n    handleDelete: function handleDelete(item) {\n      var _this2 = this;\n\n      swal({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonClass: \"md-button md-success btn-fill\",\n        cancelButtonClass: \"md-button md-danger btn-fill\",\n        confirmButtonText: \"Yes, delete it!\",\n        buttonsStyling: false\n      }).then(function (result) {\n        if (result.value) {\n          _this2.deleteRow(item);\n\n          swal({\n            title: \"Deleted!\",\n            text: \"You deleted \".concat(item.name),\n            type: \"success\",\n            confirmButtonClass: \"md-button md-success btn-fill\",\n            buttonsStyling: false\n          });\n        }\n      });\n    },\n    deleteRow: function deleteRow(item) {\n      var indexToDelete = this.tableData.findIndex(function (tableRow) {\n        return tableRow.id === item.id;\n      });\n\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    }\n  },\n  mounted: function mounted() {\n    // Fuse search initialization.\n    this.fuseSearch = new Fuse(this.tableData, {\n      keys: [\"name\", \"email\"],\n      threshold: 0.3\n    });\n  },\n  watch: {\n    /**\r\n     * Searches through the table data by a given query.\r\n     * NOTE: If you have a lot of data, it's recommended to do the search on the Server Side and only display the results here.\r\n     * @param value of the query\r\n     */\n    searchQuery: function searchQuery(value) {\n      var result = this.tableData;\n\n      if (value !== \"\") {\n        result = this.fuseSearch.search(this.searchQuery);\n      }\n\n      this.searchedData = result;\n    }\n  }\n};",{"version":3,"sources":["card.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"md-layout\">\r\n    <div class=\"md-layout-item\">\r\n      <md-card>\r\n        <md-card-header class=\"md-card-header-icon md-card-header-green\">\r\n          <div class=\"card-icon\">\r\n            <md-icon>assignment</md-icon>\r\n          </div>\r\n          <h4 class=\"title\">Paginated Tables</h4>\r\n        </md-card-header>\r\n        <md-card-content>\r\n          <md-table\r\n            :value=\"queriedData\"\r\n            :md-sort.sync=\"currentSort\"\r\n            :md-sort-order.sync=\"currentSortOrder\"\r\n            :md-sort-fn=\"customSort\"\r\n            class=\"paginated-table table-striped table-hover\"\r\n          >\r\n            <md-table-toolbar>\r\n              <md-field>\r\n                <label for=\"pages\">Per page</label>\r\n                <md-select v-model=\"pagination.perPage\" name=\"pages\">\r\n                  <md-option\r\n                    v-for=\"item in pagination.perPageOptions\"\r\n                    :key=\"item\"\r\n                    :label=\"item\"\r\n                    :value=\"item\"\r\n                  >\r\n                    {{ item }}\r\n                  </md-option>\r\n                </md-select>\r\n              </md-field>\r\n\r\n              <md-field>\r\n                <md-input\r\n                  type=\"search\"\r\n                  class=\"mb-3\"\r\n                  clearable\r\n                  style=\"width: 200px\"\r\n                  placeholder=\"Search records\"\r\n                  v-model=\"searchQuery\"\r\n                >\r\n                </md-input>\r\n              </md-field>\r\n            </md-table-toolbar>\r\n\r\n            <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\r\n              <md-table-cell md-label=\"Full Name\" md-sort-by=\"companyName\">\r\n                {{ item.user.firstName }}\r\n              </md-table-cell>\r\n              <md-table-cell md-label=\"Email\" md-sort-by=\"email\">{{\r\n                item.user.email\r\n              }}</md-table-cell>\r\n              <md-table-cell md-label=\"Card Number\">{{ item.cardNumber }}</md-table-cell>\r\n              <md-table-cell md-label=\"Print Status\">{{ item.status }}</md-table-cell>\r\n              <md-table-cell md-label=\"Actions\">\r\n                <md-button\r\n                  class=\"md-just-icon md-info md-simple\"\r\n                  @click.native=\"handleLike(item)\"\r\n                >\r\n                  <md-icon>favorite</md-icon>\r\n                </md-button>\r\n                <md-button\r\n                  class=\"md-just-icon md-warning md-simple\"\r\n                  @click.native=\"handleEdit(item)\"\r\n                >\r\n                  <md-icon>dvr</md-icon>\r\n                </md-button>\r\n                <md-button\r\n                  class=\"md-just-icon md-danger md-simple\"\r\n                  @click.native=\"handleDelete(item)\"\r\n                >\r\n                  <md-icon>close</md-icon>\r\n                </md-button>\r\n              </md-table-cell>\r\n            </md-table-row>\r\n          </md-table>\r\n          <!-- <div class=\"footer-table md-table\">\r\n            <table>\r\n              <tfoot>\r\n                <tr>\r\n                  <th\r\n                    v-for=\"item in footerTable\"\r\n                    :key=\"item.name\"\r\n                    class=\"md-table-head\"\r\n                  >\r\n                    <div class=\"md-table-head-container md-ripple md-disabled\">\r\n                      <div class=\"md-table-head-label\">\r\n                        {{ item }}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </div> -->\r\n        </md-card-content>\r\n        <md-card-actions md-alignment=\"space-between\">\r\n          <div class=\"\">\r\n            <p class=\"card-category\">\r\n              Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\r\n            </p>\r\n          </div>\r\n          <pagination\r\n            class=\"pagination-no-border pagination-success\"\r\n            v-model=\"pagination.currentPage\"\r\n            :per-page=\"pagination.perPage\"\r\n            :total=\"total\"\r\n          >\r\n          </pagination>\r\n        </md-card-actions>\r\n      </md-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Pagination } from \"@/components\";\r\nimport Fuse from \"fuse.js\";\r\nimport swal from \"sweetalert2\";\r\nimport axios from 'axios';\r\n// const params = require('../_helpers/params.js');\r\n// const CONFIG = params.params; \r\n\r\nexport default {\r\n  components: {\r\n    Pagination\r\n  },\r\n  created () {\r\n            const token = window.localStorage.getItem('token');        \r\n            let user = JSON.parse(localStorage.getItem('user'));\r\n            var app=this;\r\n                axios.get(\"http://localhost:3201/api/cardList\",{headers:{'x-access-token': token}})\r\n                    .then((response) => {\r\n                console.log(response.data)             \r\n                app.tableData = response.data.data;               \r\n            })\r\n            .catch((error) => {\r\n                console.log(\"error\");\r\n            });\r\n       },\r\n\r\n  computed: {\r\n    /***\r\n     * Returns a page from the searched data or the whole data. Search is performed in the watch section below\r\n     */\r\n    queriedData() {\r\n      let result = this.tableData;\r\n      if (this.searchedData.length > 0) {\r\n        result = this.searchedData;\r\n      }\r\n      return result.slice(this.from, this.to);\r\n    },\r\n    to() {\r\n      let highBound = this.from + this.pagination.perPage;\r\n      if (this.total < highBound) {\r\n        highBound = this.total;\r\n      }\r\n      return highBound;\r\n    },\r\n    from() {\r\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\r\n    },\r\n    total() {\r\n      return this.searchedData.length > 0\r\n        ? this.searchedData.length\r\n        : this.tableData.length;\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currentSort: \"name\",\r\n      currentSortOrder: \"asc\",\r\n      pagination: {\r\n        perPage: 5,\r\n        currentPage: 1,\r\n        perPageOptions: [5, 10, 25, 50],\r\n        total: 0\r\n      },\r\n    //   footerTable: [\"Name\", \"Date\", \"Received\", \"Sent\", \"Actions\"],\r\n      searchQuery: \"\",\r\n      propsToSearch: [\"name\", \"email\"],\r\n      tableData: [],\r\n       transactName:[],\r\n      searchedData: [],\r\n      fuseSearch: null\r\n    };\r\n  },\r\n  methods: {\r\n    customSort(value) {\r\n      return value.sort((a, b) => {\r\n        const sortBy = this.currentSort;\r\n        if (this.currentSortOrder === \"desc\") {\r\n          return a[sortBy].localeCompare(b[sortBy]);\r\n        }\r\n        return b[sortBy].localeCompare(a[sortBy]);\r\n      });\r\n    },\r\n    handleLike(item) {\r\n      swal({\r\n        title: `You liked ${item.name}`,\r\n        buttonsStyling: false,\r\n        type: \"success\",\r\n        confirmButtonClass: \"md-button md-success\"\r\n      });\r\n    },\r\n    handleEdit(item) {\r\n      swal({\r\n        title: `You want to edit ${item.name}`,\r\n        buttonsStyling: false,\r\n        confirmButtonClass: \"md-button md-info\"\r\n      });\r\n    },\r\n    handleDelete(item) {\r\n      swal({\r\n        title: \"Are you sure?\",\r\n        text: `You won't be able to revert this!`,\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonClass: \"md-button md-success btn-fill\",\r\n        cancelButtonClass: \"md-button md-danger btn-fill\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n        buttonsStyling: false\r\n      }).then(result => {\r\n        if (result.value) {\r\n          this.deleteRow(item);\r\n          swal({\r\n            title: \"Deleted!\",\r\n            text: `You deleted ${item.name}`,\r\n            type: \"success\",\r\n            confirmButtonClass: \"md-button md-success btn-fill\",\r\n            buttonsStyling: false\r\n          });\r\n        }\r\n      });\r\n    },\r\n    deleteRow(item) {\r\n      let indexToDelete = this.tableData.findIndex(\r\n        tableRow => tableRow.id === item.id\r\n      );\r\n      if (indexToDelete >= 0) {\r\n        this.tableData.splice(indexToDelete, 1);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // Fuse search initialization.\r\n    this.fuseSearch = new Fuse(this.tableData, {\r\n      keys: [\"name\", \"email\"],\r\n      threshold: 0.3\r\n    });\r\n  },\r\n  watch: {\r\n    /**\r\n     * Searches through the table data by a given query.\r\n     * NOTE: If you have a lot of data, it's recommended to do the search on the Server Side and only display the results here.\r\n     * @param value of the query\r\n     */\r\n    searchQuery(value) {\r\n      let result = this.tableData;\r\n      if (value !== \"\") {\r\n        result = this.fuseSearch.search(this.searchQuery);\r\n      }\r\n      this.searchedData = result;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n.md-card .md-card-actions{\r\n  border: 0;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/pages/Dashboard"}]}