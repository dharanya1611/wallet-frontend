{"remainingRequest":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\src\\_store\\auth.module.js","dependencies":[{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\src\\_store\\auth.module.js","mtime":1549277458394},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { authService } from \"../_services\";\nimport { router } from \"../_helpers\";\nvar user = JSON.parse(localStorage.getItem(\"user\"));\nvar initialState = user ? {\n  status: {\n    loggedIn: true\n  },\n  user: user,\n  signstep: 1,\n  seed: null\n} : {\n  status: {},\n  user: null,\n  signstep: 1,\n  seed: null\n};\nexport var authentication = {\n  namespaced: true,\n  state: initialState,\n  actions: {\n    login: function login(_ref, data) {\n      var dispatch = _ref.dispatch,\n          commit = _ref.commit;\n      var email = data.email,\n          password = data.password;\n      commit(\"loginRequest\", {\n        email: email\n      });\n      authService.login(data).then(function (res) {\n        if (res.status != 200) {\n          commit(\"loginFailure\", res.message);\n          dispatch(\"alert/error\", res.message, {\n            root: true\n          });\n        } else {\n          dispatch(\"alert/clear\", \"\", {\n            root: true\n          });\n          authService.saveToken(res);\n          commit(\"loginSuccess\", res.data);\n          dispatch(\"user/usertype\", res.data.accountType, {\n            root: true\n          });\n          router.push({\n            name: \"Dashboard\"\n          });\n        }\n      }, function (error) {\n        commit(\"loginFailure\", error);\n        dispatch(\"alert/error\", error, {\n          root: true\n        });\n      });\n    },\n    logout: function logout(_ref2) {\n      var dispatch = _ref2.dispatch,\n          commit = _ref2.commit;\n      commit(\"logout\");\n      dispatch(\"user/clear\", {\n        root: true\n      });\n      dispatch(\"alert/clear\", {\n        root: true\n      });\n      authService.logout();\n    },\n    signup: function signup(_ref3, data) {\n      var dispatch = _ref3.dispatch,\n          commit = _ref3.commit;\n      authService.signUp(data).then(function (res) {\n        if (res.status != 200) {\n          console.log(\"res\", res);\n          commit(\"loginFailure\", res.message);\n          dispatch(\"alert/error\", res.message, {\n            root: true\n          });\n        } else {\n          dispatch(\"alert/clear\", \"\", {\n            root: true\n          });\n          authService.saveToken(res);\n          dispatch(\"user/usertype\", res.data.accountType, {\n            root: true\n          });\n          commit(\"loginSuccess\", res.data);\n          commit(\"signupSuccess\", res.seed);\n        }\n      }, function (error) {\n        commit(\"loginFailure\", error);\n        dispatch(\"alert/error\", error, {\n          root: true\n        });\n      });\n    }\n  },\n  mutations: {\n    loginRequest: function loginRequest(state, user) {\n      state.status = {\n        loggedIn: true\n      };\n      state.user = user;\n    },\n    loginSuccess: function loginSuccess(state, user) {\n      state.status = {\n        loggedIn: true\n      };\n      state.user = user;\n    },\n    loginFailure: function loginFailure(state, user) {\n      state.state = {};\n      state.user = null;\n    },\n    logout: function logout(state) {\n      state.status = {};\n      state.user = null;\n      state.signstep = 1;\n      state.seed = null;\n    },\n    signupSuccess: function signupSuccess(state, seed) {\n      state.signstep = 2;\n      state.seed = seed;\n    }\n  }\n};",{"version":3,"sources":["C:\\Malar\\vuejs themes\\vue\\vue-material-dashboard\\src\\_store\\auth.module.js"],"names":["authService","router","user","JSON","parse","localStorage","getItem","initialState","status","loggedIn","signstep","seed","authentication","namespaced","state","actions","login","data","dispatch","commit","email","password","then","res","message","root","saveToken","accountType","push","name","error","logout","signup","signUp","console","log","mutations","loginRequest","loginSuccess","loginFailure","signupSuccess"],"mappings":"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","sourcesContent":["import { authService } from \"../_services\";\r\nimport { router } from \"../_helpers\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\nconst initialState = user\r\n  ? { status: { loggedIn: true }, user, signstep: 1, seed: null}\r\n  : { status: {}, user: null, signstep: 1, seed: null };\r\n\r\nexport const authentication = {\r\n  namespaced: true,\r\n  state: initialState,\r\n  actions: {\r\n    login({ dispatch, commit }, data) {\r\n      const { email, password } = data;\r\n      commit(\"loginRequest\", { email });\r\n      authService.login(data).then(\r\n        res => {\r\n          if (res.status != 200) {\r\n            commit(\"loginFailure\", res.message);\r\n            dispatch(\"alert/error\", res.message, { root: true });\r\n          } else {\r\n            dispatch(\"alert/clear\", \"\", { root: true });\r\n            authService.saveToken(res);\r\n            commit(\"loginSuccess\", res.data);\r\n            dispatch(\"user/usertype\", res.data.accountType, { root: true });\r\n            router.push({ name: \"Dashboard\" });\r\n          }\r\n        },\r\n        error => {\r\n          commit(\"loginFailure\", error);\r\n          dispatch(\"alert/error\", error, { root: true });\r\n        }\r\n      );\r\n    },\r\n    logout({ dispatch, commit }) {\r\n      commit(\"logout\");\r\n      dispatch(\"user/clear\", { root: true });\r\n      dispatch(\"alert/clear\", { root: true });\r\n      authService.logout();\r\n    },\r\n    signup({ dispatch, commit }, data) {\r\n      authService.signUp(data).then(\r\n        res => {\r\n          if (res.status != 200) {\r\n            console.log(\"res\", res);\r\n            commit(\"loginFailure\", res.message);\r\n            dispatch(\"alert/error\", res.message, { root: true });\r\n          } else {\r\n            dispatch(\"alert/clear\", \"\", { root: true });\r\n            authService.saveToken(res);\r\n            dispatch(\"user/usertype\", res.data.accountType, { root: true });\r\n            commit(\"loginSuccess\", res.data);\r\n            commit(\"signupSuccess\", res.seed);\r\n          }\r\n        },\r\n        error => {\r\n          commit(\"loginFailure\", error);\r\n          dispatch(\"alert/error\", error, { root: true });\r\n        }\r\n      );\r\n    }\r\n  },\r\n  mutations: {\r\n    loginRequest(state, user) {\r\n      state.status = { loggedIn: true };\r\n      state.user = user;\r\n    },\r\n    loginSuccess(state, user) {\r\n      state.status = { loggedIn: true };\r\n      state.user = user;\r\n    },\r\n    loginFailure(state, user) {\r\n      state.state = {};\r\n      state.user = null;\r\n    },\r\n    logout (state) {\r\n      state.status = {};\r\n      state.user = null;\r\n      state.signstep = 1;\r\n      state.seed = null;\r\n    },\r\n    signupSuccess(state, seed) {\r\n      state.signstep = 2;\r\n      state.seed = seed;\r\n    }\r\n  }\r\n};\r\n"]}]}